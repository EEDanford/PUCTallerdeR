---
title: "C7-correlacion"
---

# Asunciones de modelos normales

La forma más común de modelos y funciones viene con asunciones. Incluye: normalidad, homogeneidad de varianza, y independencia (sin intercorrelaciónes). Estos modelos se llama modelos normales. La última semana hablabamos del funciones para hacer normal los variables, pero no se cumplen está requisito.

## correlación

Hay varias maneras de probar correlación entre sus variables. Usualmente se pasa cuando tienes medidas de caracteristicas que quizas crecen juntos. Por ejemplo, si quieres usar largo de cuerpo y largo de sepalo de una planta, es posible que son correlados porque el largo de sepalo debe crecer con el largo de cuerpo de la planta. En este situación, puede probar y determinar si haya uno mejor que otro para usar. Puede hacerse eso antes con gráficos y después con el *variance inflation factor*.

```{r}


```

```{r}
library(corrgram)

pinguinos <- datos::pinguinos
pinguinos$abundancia <- sample(1:100, replace=T, nrow(pinguinos)) # hice un colúmno con valores de abundancia (falsos)

pinguinoscorr <- pinguinos[c(3:6)] # (elegimos solo los colúmnos númericos)

corrgram(pinguinoscorr) # hacer el corrgram

```

Acá podemos adivinar que largo aleta y masa corporal son correlados fuertemente positivamente (porque son azul oscuro). Además aparece que quizas son correlados el alto pico y el largo aleta negativamente (porque son rojo oscuro).

Si intentemos un modelo con estas variables:

```{r}
lmpincorr <- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + largo_aleta_mm + masa_corporal_g)

library(car) 
vif(lmpincorr) # * variance inflation factor *

```

Números más que 2-3 son problemáticas. Acá, como pensamos en el corrgram, el masa corporal y largo aleta son correlados (más que 3). Entonces, sacamos el largo aleta (lo más grande) y intentamos otra vez.

```{r}
lmpincorr2 <- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + masa_corporal_g)

vif(lmpincorr2) # * variance inflation factor *

```

Ahora todo está bien, y podemos seguir con las otras pruebas!

## plot()
