[
  {
    "objectID": "Proyecto2.html",
    "href": "Proyecto2.html",
    "title": "Proyecto2",
    "section": "",
    "text": "Hacer modelos con sus datos\nLa idea de proyecto 2 es hacer un modelo adecuado con sus datos. Es integral tener datos en las formas correctas (integral, número, factor, etc..). Además, debería probar las supuestos del tipo de modelo elegido (si eliges un tipo non-paramétrico, debería probar por normalidad y covarianza todavía).\nDebería entregar un pdf de R Markdown (con cajas de códigos incluidos) con:\n\nUn corrgram o PCA con las variables explicativas y una oración explicando lo que significa el corrgram/PCA\nUn anova o kruskal-wallis (paramétrico o non-paramétrico) con prueba de normalidad, outliers y homogeneidad de la varianza y una oración explicando sus resultados\nUn par de modelos (paramétrico o non-paramétrico) con pruebas de las supuestos (y explica los resultados de estas pruebas)\nUn modelo final elegido de las opciones con un método adecuado y un párrafo explicando como lo elegiste lo mejor e interpretando los resultados\n\n\n\nRúbrica\n\n\n\n\n\n\n\n\n\n\n\n1\n3\n5\n7\n\n\n\n\nCorrgram o PCA\nFalta corrgram/pca\nSin todo los variables de interés (por el\n\n\n\n\nmodelo) o sin interpretación\nCon todo los variables, pero mal interpretado\nIncluye todo los variables de interés, con\n\n\n\n\ninterpretación adecuado, bien organizado\n\n\n\n\n\n\nAnova o kruskal-wallis\nFalta anova/kruskal wallis\nElección de la prueba incorrecta desde sus\n\n\n\n\npruebas o falta algun supuesto\nLos supuestos y prueba correcto, pero mal\n\n\n\n\n\ninterpretado\nTodo corecto, o con errores chicos\n\n\n\n\n\nPruebas de los supuestos (de los modelos)\nFalta pruebas de los supuestos\nHay la mayoría de los supuestos con errores en interpretación\nTodos los supuestos incluidos y explicados con pocos errores\nBuen interpretación de los supuestos\n\n\nGrupos de modelos\nFalta un par de modelos (o sea solo hay uno)\nModelos con familia mal elegido o tipo incorrecto, y/o sin interpretación\nModelos buen diseñados, con buena familia, pero mal interpretado\nTodo corecto, o con errores chicos\n\n\nElección del modelo final\nSin modelo final\nModelo final elegido pero no interpretado o mal elegido\nModelo final bien elegido, y con pocas errores en interpretación\nModelo bien diseñado, elegido y interpretado: es claro como elegiste su modelo\n\n\nOrganización del R Markdown\nSin organización, sin texto normal, sin pdf\nMal exportado, sin párrafos o títulos\nBien hecho, pero sin un elemento\nCon párrafos, fotos, títulos, exportada como pdf",
    "crumbs": [
      "Proyectos",
      "Proyecto2"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PUCTallerdeR",
    "section": "",
    "text": "Bienvenidos estudiantes al taller de R 2024. Reunimos cada Martes a las 17:30 desde 18:40.\nCorreo: danford.34@buckeyemail.osu.edu",
    "crumbs": [
      "Bienvenidos"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html",
    "href": "C8-modelosnormales1.html",
    "title": "Anova & Kruskal-Wallis",
    "section": "",
    "text": "Anova- análisis de la varianza\nOcupa las pruebas Anova/Kruskal-Wallis para analizar si existe diferencias significativas entre un grupo y otro. O sea, debería ser una prueba entre niveles o grupos específicos. No deba usar una Anova para analizar un variable numérico.\n¿Por qué? Porque el proceso de hacer una anova (análisis de varianza) es tomar los promedios de su variable de interés por cada grupo y compararlas para decidir si hay una diferencia que es mas que lo que se pasa naturalmente o por casualidad.\nPor ejemplo: Con los datos de pingüinos, supone que quiere probar si una especie u otra tiene una masa corporal más grande que cualquiera otra especie. Acá una anova se sirve con masa corporal con su variable de respuesta y especie con su variable explicativa. Porque especie es un grupo, o sea, que todos los pingüinos son de una de las tres especies, podemos usar una anova.\n\nlibrary(datos)\nlibrary(tidyverse)\nlibrary(vegan)\nlibrary(rstatix)\nlibrary(ggpubr)\n\npinguinos &lt;- datos::pinguinos\n\npinguinos %&gt;%\n  ggplot(aes(x=especie, y=masa_corporal_g, color=especie))+\n  geom_boxplot()+\n  labs(x=\"especie\", y=\"masa corporal (g)\")+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Masa Corporal por Especie de Pingüino\")\n\n\n\n\n\n\n\n\nPero, si quiere analizar si el largo pico cambia por la masa corporal, no puede usar una anova porque la masa corporal no tiene niveles, cada masa es distinto. Su variable explicativa debe ser categórica. Una prueba, si no sea seguro, es hacer un boxplot con su variable explicativa como el y, e su respuesta como x. Si no puedas, no usa una anova.",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html#diseño-del-estudio-independencia",
    "href": "C8-modelosnormales1.html#diseño-del-estudio-independencia",
    "title": "Anova & Kruskal-Wallis",
    "section": "1. Diseño del estudio: independencia",
    "text": "1. Diseño del estudio: independencia\nNo puede ser relaciones entre observaciones entre grupos. Por ejemplo, no pueda tener un pingunio individual que tiene datos por la isla B y la isla A, debe ser una o otra.",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html#identificareliminar-outliers-ver-clase-7",
    "href": "C8-modelosnormales1.html#identificareliminar-outliers-ver-clase-7",
    "title": "Anova & Kruskal-Wallis",
    "section": "2. identificar/eliminar outliers (ver Clase 7)",
    "text": "2. identificar/eliminar outliers (ver Clase 7)\n\npinguinos %&gt;% \n  group_by(especie) %&gt;%\n  identify_outliers(masa_corporal_g)\n\n# A tibble: 2 × 10\n  especie isla  largo_pico_mm alto_pico_mm largo_aleta_mm masa_corporal_g sexo  \n  &lt;fct&gt;   &lt;fct&gt;         &lt;dbl&gt;        &lt;dbl&gt;          &lt;int&gt;           &lt;int&gt; &lt;fct&gt; \n1 Barbijo Dream          52           20.7            210            4800 macho \n2 Barbijo Dream          46.9         16.6            192            2700 hembra\n# ℹ 3 more variables: anio &lt;int&gt;, is.outlier &lt;lgl&gt;, is.extreme &lt;lgl&gt;\n\n\nAcá tenemos dos outliers, pero niguno son extremos, puede elegir a quedarlos o eliminarlos.",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html#probar-normalidad-por-cada-gruponivel-o-con-todo",
    "href": "C8-modelosnormales1.html#probar-normalidad-por-cada-gruponivel-o-con-todo",
    "title": "Anova & Kruskal-Wallis",
    "section": "3. Probar normalidad por cada grupo/nivel o con todo",
    "text": "3. Probar normalidad por cada grupo/nivel o con todo\nPueda hacer esta prueba antes o después de su ANOVA y en grupos dividios o juntos.\nPor los dos, había un método numérico y un gráfico. El numérico es más sensible, y a veces puede ser demasiado sensible (especialmente con mayores cantidades de datos), entonces es recomendable usar los dos.\n\nVersión antes:\nDebería probar normalidad por los grupos con la prueba de shapiro (valor P &gt; 0.05 es normal)\nEj: Pruebo de Shapiro\n\npinguinos %&gt;%          # con datos pinguinos\n  group_by(especie)%&gt;% # niveles/grupos = especie (3 grupos)\n  shapiro_test(masa_corporal_g) # variable respuesta: masa corporal\n\n# A tibble: 3 × 4\n  especie variable        statistic      p\n  &lt;fct&gt;   &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;\n1 Adelia  masa_corporal_g     0.981 0.0324\n2 Barbijo masa_corporal_g     0.984 0.561 \n3 Papúa   masa_corporal_g     0.986 0.234 \n\n\nDesde la prueba de Shapiro, el espeice ‘Adelia’ no es normal, pero los otros dos si son.\nEj: QQplot\nEl QQplot se muestra los valores y su correlación con la distribución (o curva) normal. Un QQplot con datos normales tiene los puntos mas o menos siguiendo la línea.\n\nggqqplot(pinguinos, \"masa_corporal_g\", facet.by = \"especie\") # paquete ggpubr\n\n\n\n\n\n\n\n\nPuede ver que Adelia y Papua tienen variaciones a la partida y el fin, pero son más o menos con la línea. Puede seguir con la ANOVA, pero con caución, o puede usar el Kruskal-Wallis. Pero la ANOVA si tiene poquito más flexibilidad de, por ejemplo, los modelos lineales generales (glm), entonces con variación menor (como acá) todavía puede usar. Pero si no este seguro, usar el Kruskal-Wallis.\n\n\nVersión después\nEs posbile usar ‘lm’ (modelo lineal) o ‘aov’ (anova) acá. Resulta exactamente lo mismo.\n\n# TILDE es 'ctl + alt + ]'\nnormmod &lt;- lm(data=pinguinos, masa_corporal_g ~ especie)\n\nggqqplot(residuals(normmod))\n\n\n\n\n\n\n\nnorm &lt;- aov(data=pinguinos, masa_corporal_g ~ especie)\n\nggqqplot(residuals(norm))\n\n\n\n\n\n\n\n\n\nshapiro_test(residuals(normmod))\n\n# A tibble: 1 × 3\n  variable           statistic p.value\n  &lt;chr&gt;                  &lt;dbl&gt;   &lt;dbl&gt;\n1 residuals(normmod)     0.992  0.0512\n\nshapiro_test(residuals(norm))\n\n# A tibble: 1 × 3\n  variable        statistic p.value\n  &lt;chr&gt;               &lt;dbl&gt;   &lt;dbl&gt;\n1 residuals(norm)     0.992  0.0512\n\n\nDesde esta prueba anterior, es normal (el valor P es un poquito arriba del 0.05), entonces vamos con ANOVA.",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html#homogeneidad-de-la-varianza",
    "href": "C8-modelosnormales1.html#homogeneidad-de-la-varianza",
    "title": "Anova & Kruskal-Wallis",
    "section": "4. Homogeneidad de la varianza",
    "text": "4. Homogeneidad de la varianza\nSus grupos también debería cumplir con la homogeneidad de la varianza. O sea, todos sus grupos deberían tener niveles de varianza similares. Si haya un grupo que tiene una varianza tan larga y los otros muy poco, es probable que este grupo va a cambiar sus resultados.\nEs importante probar la homogeneidad de la varianza antes de hacer su ANOVA.\nDe nuevo hay un método numérico y un método visual.\n\nvisual\nCon el grafico, debería ser sin relaciones entre los grupos (o sea, random).\n\nplot(norm, 1)\n\n\n\n\n\n\n\n\nAcá no aparece random, sino que con una curva.\n\n\nPrueba de Levene\nLa prueba de Levene se usa para probar la homogeneidad de la varianza también (valor P &gt; 0.05 está bien).\n\nlevene_test(data=pinguinos, masa_corporal_g ~ especie)\n\n# A tibble: 1 × 4\n    df1   df2 statistic       p\n  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1     2   339      5.12 0.00645\n\n\nNo se cumplen los datos con la suposición de la homogeneidad de la varianza. Entonces, deberíamos usar Kruskal-Wallis, intentar a transformar los datos, o usar la Welch ANOVA (welch_anova_test)",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C8-modelosnormales1.html#prueba-post-hoc",
    "href": "C8-modelosnormales1.html#prueba-post-hoc",
    "title": "Anova & Kruskal-Wallis",
    "section": "Prueba post-hoc",
    "text": "Prueba post-hoc\nEn el ejemplo arriba, puede ver que había distinciones entre los promedios, pero no es claro cual grupo tiene valores menores/mayores. Para adivinar eso, ocupa una prueba ‘post-hoc’ o después de hecho. Estas pruebas producir una tabla con comparaciones de cada promedio con cada otro promedio.\nPor ejemplo:\n\nDunnsMCE &lt;- dunn_test(data=pinguinos, masa_corporal_g ~ especie)\nDunnsMCE\n\n# A tibble: 3 × 9\n  .y.         group1 group2    n1    n2 statistic        p    p.adj p.adj.signif\n* &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;       \n1 masa_corpo… Adelia Barbi…   151    68     0.397 6.91e- 1 6.91e- 1 ns          \n2 masa_corpo… Adelia Papúa    151   123    13.8   1.73e-43 5.18e-43 ****        \n3 masa_corpo… Barbi… Papúa     68   123    10.7   7.33e-27 1.47e-26 ****        \n\n\nPueda ver que los individuos del especies Adelia y Barbijo son significativamente distino del los de Papúa.\nRecuerda el boxplot original:\n\npinguinos %&gt;%\n  ggplot(aes(x=especie, y=masa_corporal_g, color=especie))+\n  geom_boxplot()+\n  labs(x=\"especie\", y=\"masa corporal (g)\")+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Masa Corporal por Especie de Pingüino\")\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nAhora, es correcto decir que los pingüinos de la especie Papúa tienen una masa corporal significativamente más grande de los del Adelia o Barbijo.\nPor Kruskal-Wallis, el post-hoc es la prueba de Dunn (dunn_test()). Por ANOVA normal es la prueba de Tukey (tukey_HSD()). Por el Welch ANOVA es la prueba de Games-Howell (games_howell_test())",
    "crumbs": [
      "Clases",
      "Anova & Kruskal-Wallis"
    ]
  },
  {
    "objectID": "C6-normalizacion.html",
    "href": "C6-normalizacion.html",
    "title": "C6-normalizacion",
    "section": "",
    "text": "Había varías cosas, depende en sus datos, que puede o, a veces debe, hacer antes de modelar sus datos. Incluyen: asegurar los típos de datos en R, normalizar, y tomar un idea del limites y formas de sus datos.\nPorque? Para asegurar que cumplen con los suposiciónes de sus modelos y que cuando hacen modelos que ellos son lo mas correcto posible.\n\n\nData types o típos de datos, son la categoría asignada a sus datos. Puede determinarla en excel, pero igual es posible en R.\nDebe tener caución con sus datos, porque si haya una columna de números, pero es asignado como texto, no puede hacer procesos o funciones matemáticas con ellos. O sea, que sus scripts pueden fallar por causa de típos incorrectos de datos.\nHabía muchas típos, pero lo mas comunes son:\n\n\n\n\n\n\n\nTípo\nDescripción\n\n\n\n\nFactor\nPuede ser número, entero o texto, pero la idea es que no representa su valor exacto, sino que niveles o distinciones entre sitios. ej: sus sitios, tiempo de observación, etc..\n\n\nNúmero (numeric)\nUn número (no entero) que quiere usar como número ej: porcentaje de floración, concentración de carbon, etc..\n\n\nEntero (integer)\nUn número entero que quiere usar como número ej: abundancia de abejas, riqueza de especies\n\n\nCaracter (texto)\nPura texto, apto para apuntes o columnas que no va a usar en sus modelos.\n\n\nFecha (date)\nUna fecha (formato especial, pero igual puede usar como factor)\n\n\n\nDespúes de identificar sus típos de datos deseados, puede cambiarlos en R y guardar en lo mismo dataframe (en la misma columna porque se cambia solo el típo de dato y ningún otro información.\n\nlibrary(datos)\nclima &lt;-datos::clima\n\n# factor\nclima$origen &lt;- as.factor(clima$origen) \nclima$anio &lt;- as.factor (clima$anio) # año/mes/día/hora son factores porque números mas grandes no realmente son mas\nclima$mes &lt;- as.factor(clima$mes) # ej: enero (1) no es menos de diciembre (12), y como número aparece así\nclima$dia &lt;- as.factor(clima$dia) # entonces usamos como factor\nclima$hora &lt;- as.factor(clima$hora)\nclima$direccion_viento &lt;- as.factor(clima$direccion_viento) # es decir N/S/E/W no valores\n\n# número/numeric\nclima$temperatura &lt;- as.numeric(clima$temperatura) # temperatura, al otro lado, si realmente cambia cuando crece\nclima$humedad &lt;- as.numeric(clima$humedad)\nclima$velocidad_viento &lt;- as.numeric(clima$velocidad_viento)\nclima$precipitacion &lt;- as.numeric(clima$precipitacion)\nclima$visibilidad &lt;- as.numeric(clima$visibilidad)\n\n# fecha\nclima$fecha_hora &lt;- as.Date(clima$fecha_hora)\n\n# integer/entero\n\n# dataframe$columno &lt;- as.integer(dataframe$mismocolumno)\n\n\n\n\nTransformación y sormalización son temas complicadas, que pueden significar varias cosas.\nTienen varios funciones en la sciencia de datos:\n\ncrear un ‘scale’ para comparar datos que tienen medidas de distintas unidades (ej: mm con grados celsius, o cm con litres)\nintentar a ponder datos irregulares en una distribución normal (a veces no funciona, pero puede intentar)\npara tomar en cuenta distinciones entre sitios que no tienen variable (si usas algo como un ‘z score’)\n\nSe puede hacer de varias metodos, y hay ambas paquetes que tienen estas funciones. Algunos de mis favoritos son: bestNormalize, log, y z-score. Pero es importante saber cual metodo es adecuado para sus propios datos. También puede encontrar nuevos metodos en un paper o el internet y usalos, pero acá son tres comúnes.\nSino que quieres crear un ‘scale’ parecida para variables con distintas medidas, o para normalizar, empece con un histogram de sus datos.\n\npinguinos &lt;- datos::pinguinos\n\nhist(pinguinos$masa_corporal_g)\n\n\n\n\n\n\n\n# podemos ver que quizas no es normal (poquito a la izquierda)\n\n\n\nEl paquete ‘bestNormalize’ fue diseñado a elegir un transformación beneficial entre varias (boxcox, ordernorm, sqrt, arcsin, center scale, log, yeo-johnson, y double reverse log).\n\nlibrary(bestNormalize)\n\nhist(pinguinos$masa_corporal_g) # aparece normal? si o no?\n\n\n\n\n\n\n\nbestNormalize(pinguinos$masa_corporal_g) # elegir el metodo con el numero mas bajo (aca ordernorm)\n\nBest Normalizing transformation with 342 Observations\n Estimated Normality Statistics (Pearson P / df, lower =&gt; more normal):\n - arcsinh(x): 1.3328\n - Box-Cox: 1.3514\n - Center+scale: 1.5443\n - Double Reversed Log_b(x+a): 2.9871\n - Log_b(x+a): 1.3328\n - orderNorm (ORQ): 1.1667\n - sqrt(x + a): 1.4273\n - Yeo-Johnson: 1.3514\nEstimation method: Out-of-sample via CV with 10 folds and 5 repeats\n \nBased off these, bestNormalize chose:\norderNorm Transformation with 342 nonmissing obs and ties\n - 95 unique values \n - Original quantiles:\n  0%  25%  50%  75% 100% \n2700 3550 4050 4750 6300 \n\nON.MasaCorpg &lt;- orderNorm(pinguinos$masa_corporal_g) #orderNorming y guardar como factor\n\nWarning in orderNorm(pinguinos$masa_corporal_g): Ties in data, Normal distribution not guaranteed\n\npinguinos$MasaCorpg_t &lt;- ON.MasaCorpg$x.t # guardar todo con '_t', o sea, fue transformado\n\nhist(pinguinos$MasaCorpg_t) # histogram para ver normalidad de variable\n\n\n\n\n\n\n\nshapiro.test(pinguinos$MasaCorpg_t) # Prueba de normalidad\n\n\n    Shapiro-Wilk normality test\n\ndata:  pinguinos$MasaCorpg_t\nW = 0.99931, p-value = 1\n\n\nA veces todos los metodos en bestNormalize son superparecidos; por ser caso, puede elegir lo mas bajo o lo mismo para todo sus variables. Es recomendable usar lo mismo metodo para todos tus variables.\n\n\n\nA veces puede usar un log() para transformar sus datos. Solo cambiar sus números con el log de los números. Puede hacerse y guardar como nueva columna o en parte de un modelo.\n\nhist(pinguinos$masa_corporal_g)\n\n\n\n\n\n\n\npinguinos$log_masacorpg &lt;- log(pinguinos$masa_corporal_g)\n\nhist(pinguinos$log_masacorpg)\n\n\n\n\n\n\n\n\n\n\n\nLa función ‘scale()’ es parte del R y se usa para ‘z-scores’.\n\nhist(pinguinos$largo_aleta_mm)\n\n\n\n\n\n\n\npinguinos$largo_aleta_mm_z &lt;- scale(pinguinos$largo_aleta_mm)\nhist(pinguinos$largo_aleta_mm_z)",
    "crumbs": [
      "Clases",
      "C6-normalizacion"
    ]
  },
  {
    "objectID": "C6-normalizacion.html#típos-de-datos-data-types",
    "href": "C6-normalizacion.html#típos-de-datos-data-types",
    "title": "C6-normalizacion",
    "section": "",
    "text": "Data types o típos de datos, son la categoría asignada a sus datos. Puede determinarla en excel, pero igual es posible en R.\nDebe tener caución con sus datos, porque si haya una columna de números, pero es asignado como texto, no puede hacer procesos o funciones matemáticas con ellos. O sea, que sus scripts pueden fallar por causa de típos incorrectos de datos.\nHabía muchas típos, pero lo mas comunes son:\n\n\n\n\n\n\n\nTípo\nDescripción\n\n\n\n\nFactor\nPuede ser número, entero o texto, pero la idea es que no representa su valor exacto, sino que niveles o distinciones entre sitios. ej: sus sitios, tiempo de observación, etc..\n\n\nNúmero (numeric)\nUn número (no entero) que quiere usar como número ej: porcentaje de floración, concentración de carbon, etc..\n\n\nEntero (integer)\nUn número entero que quiere usar como número ej: abundancia de abejas, riqueza de especies\n\n\nCaracter (texto)\nPura texto, apto para apuntes o columnas que no va a usar en sus modelos.\n\n\nFecha (date)\nUna fecha (formato especial, pero igual puede usar como factor)\n\n\n\nDespúes de identificar sus típos de datos deseados, puede cambiarlos en R y guardar en lo mismo dataframe (en la misma columna porque se cambia solo el típo de dato y ningún otro información.\n\nlibrary(datos)\nclima &lt;-datos::clima\n\n# factor\nclima$origen &lt;- as.factor(clima$origen) \nclima$anio &lt;- as.factor (clima$anio) # año/mes/día/hora son factores porque números mas grandes no realmente son mas\nclima$mes &lt;- as.factor(clima$mes) # ej: enero (1) no es menos de diciembre (12), y como número aparece así\nclima$dia &lt;- as.factor(clima$dia) # entonces usamos como factor\nclima$hora &lt;- as.factor(clima$hora)\nclima$direccion_viento &lt;- as.factor(clima$direccion_viento) # es decir N/S/E/W no valores\n\n# número/numeric\nclima$temperatura &lt;- as.numeric(clima$temperatura) # temperatura, al otro lado, si realmente cambia cuando crece\nclima$humedad &lt;- as.numeric(clima$humedad)\nclima$velocidad_viento &lt;- as.numeric(clima$velocidad_viento)\nclima$precipitacion &lt;- as.numeric(clima$precipitacion)\nclima$visibilidad &lt;- as.numeric(clima$visibilidad)\n\n# fecha\nclima$fecha_hora &lt;- as.Date(clima$fecha_hora)\n\n# integer/entero\n\n# dataframe$columno &lt;- as.integer(dataframe$mismocolumno)",
    "crumbs": [
      "Clases",
      "C6-normalizacion"
    ]
  },
  {
    "objectID": "C6-normalizacion.html#transformación-y-normalización",
    "href": "C6-normalizacion.html#transformación-y-normalización",
    "title": "C6-normalizacion",
    "section": "",
    "text": "Transformación y sormalización son temas complicadas, que pueden significar varias cosas.\nTienen varios funciones en la sciencia de datos:\n\ncrear un ‘scale’ para comparar datos que tienen medidas de distintas unidades (ej: mm con grados celsius, o cm con litres)\nintentar a ponder datos irregulares en una distribución normal (a veces no funciona, pero puede intentar)\npara tomar en cuenta distinciones entre sitios que no tienen variable (si usas algo como un ‘z score’)\n\nSe puede hacer de varias metodos, y hay ambas paquetes que tienen estas funciones. Algunos de mis favoritos son: bestNormalize, log, y z-score. Pero es importante saber cual metodo es adecuado para sus propios datos. También puede encontrar nuevos metodos en un paper o el internet y usalos, pero acá son tres comúnes.\nSino que quieres crear un ‘scale’ parecida para variables con distintas medidas, o para normalizar, empece con un histogram de sus datos.\n\npinguinos &lt;- datos::pinguinos\n\nhist(pinguinos$masa_corporal_g)\n\n\n\n\n\n\n\n# podemos ver que quizas no es normal (poquito a la izquierda)\n\n\n\nEl paquete ‘bestNormalize’ fue diseñado a elegir un transformación beneficial entre varias (boxcox, ordernorm, sqrt, arcsin, center scale, log, yeo-johnson, y double reverse log).\n\nlibrary(bestNormalize)\n\nhist(pinguinos$masa_corporal_g) # aparece normal? si o no?\n\n\n\n\n\n\n\nbestNormalize(pinguinos$masa_corporal_g) # elegir el metodo con el numero mas bajo (aca ordernorm)\n\nBest Normalizing transformation with 342 Observations\n Estimated Normality Statistics (Pearson P / df, lower =&gt; more normal):\n - arcsinh(x): 1.3328\n - Box-Cox: 1.3514\n - Center+scale: 1.5443\n - Double Reversed Log_b(x+a): 2.9871\n - Log_b(x+a): 1.3328\n - orderNorm (ORQ): 1.1667\n - sqrt(x + a): 1.4273\n - Yeo-Johnson: 1.3514\nEstimation method: Out-of-sample via CV with 10 folds and 5 repeats\n \nBased off these, bestNormalize chose:\norderNorm Transformation with 342 nonmissing obs and ties\n - 95 unique values \n - Original quantiles:\n  0%  25%  50%  75% 100% \n2700 3550 4050 4750 6300 \n\nON.MasaCorpg &lt;- orderNorm(pinguinos$masa_corporal_g) #orderNorming y guardar como factor\n\nWarning in orderNorm(pinguinos$masa_corporal_g): Ties in data, Normal distribution not guaranteed\n\npinguinos$MasaCorpg_t &lt;- ON.MasaCorpg$x.t # guardar todo con '_t', o sea, fue transformado\n\nhist(pinguinos$MasaCorpg_t) # histogram para ver normalidad de variable\n\n\n\n\n\n\n\nshapiro.test(pinguinos$MasaCorpg_t) # Prueba de normalidad\n\n\n    Shapiro-Wilk normality test\n\ndata:  pinguinos$MasaCorpg_t\nW = 0.99931, p-value = 1\n\n\nA veces todos los metodos en bestNormalize son superparecidos; por ser caso, puede elegir lo mas bajo o lo mismo para todo sus variables. Es recomendable usar lo mismo metodo para todos tus variables.\n\n\n\nA veces puede usar un log() para transformar sus datos. Solo cambiar sus números con el log de los números. Puede hacerse y guardar como nueva columna o en parte de un modelo.\n\nhist(pinguinos$masa_corporal_g)\n\n\n\n\n\n\n\npinguinos$log_masacorpg &lt;- log(pinguinos$masa_corporal_g)\n\nhist(pinguinos$log_masacorpg)\n\n\n\n\n\n\n\n\n\n\n\nLa función ‘scale()’ es parte del R y se usa para ‘z-scores’.\n\nhist(pinguinos$largo_aleta_mm)\n\n\n\n\n\n\n\npinguinos$largo_aleta_mm_z &lt;- scale(pinguinos$largo_aleta_mm)\nhist(pinguinos$largo_aleta_mm_z)",
    "crumbs": [
      "Clases",
      "C6-normalizacion"
    ]
  },
  {
    "objectID": "C4-GGplot1.html",
    "href": "C4-GGplot1.html",
    "title": "C4-GGPlot1",
    "section": "",
    "text": "Para explorar y comunicar sus datos, necesita visualizaciónes adecuadas. Hay ambos tipos de gráficos, y desafortunadamente, muchas que no se enseña mucho.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n # Partes de un gráfico\nUn gráfico debería tener un título descriptivo, títulos cortos para los ejes y ejes con numeración adecuado. Si ocupa colores para demonstar grupos o asociaciones, ten cuidado. Colores como rojo y verde pueden significar para e ir, o mal y bueno. Azul puede ser agua, el mar, el cielo. Verde, la tierra, el bosque, etc.. Ten cuidado con sus colores elegidos.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#gráfico-de-columnas-bar-graph",
    "href": "C4-GGplot1.html#gráfico-de-columnas-bar-graph",
    "title": "C4-GGPlot1",
    "section": "Gráfico de columnas (bar graph)",
    "text": "Gráfico de columnas (bar graph)\nLo mas básico es un gráfico de columnas. Usualmente no es adecuada porque solo se enseña una cosita. No dice nada del gama de sus datos, ni tampoco un estatistica especifica.\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\n\n\n\nAcá hay un gráfico de columnas con las tres especies. Puede ver que las especies tienen promedios de largo sepalo distintos, pero no mas. No hay información del promedio, ni distribución normal, tampoco el promedio/desviación estander.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#dotplot",
    "href": "C4-GGplot1.html#dotplot",
    "title": "C4-GGPlot1",
    "section": "dotplot",
    "text": "dotplot\nUn dotplot contiene 2 variables: el variable respuesta en el axis x y explicativa en el axis y. Un dotplot tiene mas información de los gráficos de columnas.\n\n\n\n\n\n\n\n\n\nAcá hay mas información y pueden ver distinciones entre las tres especies. Las tres colores (de las especies) estan mas o menos seperadas y indicando que es probable que hay diferencias distintas entre largo pico y masa corporal de las tres especies. Tambien, aparece que hay una relación entre masa corporal alta y largo pico alto.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#dotplot-con-línea",
    "href": "C4-GGplot1.html#dotplot-con-línea",
    "title": "C4-GGPlot1",
    "section": "dotplot con línea",
    "text": "dotplot con línea\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nHay dos opciones por una línea, acá tenemos una línea de regressión por cada especie.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nAcá tenemos solo una línea que sugiere que hay una relación entre masa corporal y largo pico.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#histogram",
    "href": "C4-GGplot1.html#histogram",
    "title": "C4-GGPlot1",
    "section": "Histogram",
    "text": "Histogram\nEl histogram es quizas lo mas útil para probar la normalidad de sus datos. Aparece como un gráfico de columnas, pero no lo es. Cada número observado en el x-axis (o sea 0=0 abejas colectados, 2=2 abejas colectados) y el y axis es el número de tiempos que cada número observado.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#boxplot",
    "href": "C4-GGplot1.html#boxplot",
    "title": "C4-GGPlot1",
    "section": "Boxplot",
    "text": "Boxplot\nUn boxplot es uno de los gráficos mas descriptivos de todos. Los boxplots se muestra todo de su curvo normal, la caja esta todo entre 1 deviación estander, la línea oscura es el promedio de sus datos. Las líneas afeura de la caja son 2-3 deviación estander. Puntos usualmente son outliers.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C4-GGplot1.html#boxplot-con-dotplot",
    "href": "C4-GGplot1.html#boxplot-con-dotplot",
    "title": "C4-GGPlot1",
    "section": "Boxplot con dotplot",
    "text": "Boxplot con dotplot\nPara mostrar mas información, puede añadir los puntos exactos de sus datos.",
    "crumbs": [
      "Clases",
      "C4-GGPlot1"
    ]
  },
  {
    "objectID": "C2-RMarkdown.html",
    "href": "C2-RMarkdown.html",
    "title": "C2-RMarkdown",
    "section": "",
    "text": "Había dos lugares para hacer códigos en R Studio: console y un script.\n\n\nEn el console podemos hacer códigos de solo una línea. Por ejemplo, podemos hacer matemáticas básicas en el console (abajo).\n\n\n\nPuede hacer matemáticas básicas en el consolo.\n\n\nPuede pedir ayuda en el console si usa un mandato y un signo de interrogación.\n\n\n\nAcá activamos el función de ayuda.\n\n\nPuede usar para determinar la cita para una paquete (es importante incluír sus paquetes y citas en cualquier tesís o paper).\n\n\n\nPedir citaciónes en el consolo.\n\n\nFinalmente, usa el console para installar paquetes. Paquetes son funciones no installadas con R normal. Usualmente son disenadas por algo especifico (metricos ecologicos, graficos, etc..).\n\n\n\n\n\nPara usarla, es necesario installar del internet a su computadora (necesita internet por solo este etapa) y despues puede usarla en cualquier momento. A installar, usa el código ’install.packages(“nombre de paquete”). Ten cuidado, el nombre de paquete debería ser exactamente correcto y con parentesís (no guion).\n\n\n\nAca instalo el paquete ‘tidyverse’ en el console\n\n\n\n\n\nAún puede trabajar con el consolo, y hay cositas que solo puede hacer en el consolo, para las ciencias de datos es mejor usar un script.\nEn el consolo no es posible guardar su trabajo, si cierre R, lo pierde. Pero con un script puede guardar su trabajo, y puede trabajar sin hacerlo. En el consolo, todo debería ser correcto o no funcionará, pero con un script, puede hacer solo algunas líneas y trabajar en otras hasta todo esta perfecto.\nAdemas, si guardaría su script en el mismo carpeta con su proyecto y csv, tiene acceso a los dos.\n\n\n\nTomar apuntes con #\n\nEs importante dejar apuntes en sus códigos para su mismo en el futuro y para cualquier otra persona que usará sus códigos\nPuedes usar # para incluir códigos que ya no funciona, pero no quieres quitar totalmente\n\n\n\n\n\nApuntes con #\n\n\n\n\n\n\n\n\n\n\n\n\n\nR Script\nR Markdown\n\n\n\n\nCada palabra esta considerada código\nHay cajas para seperar códigos y texto\n\n\nGráficos se exporta en su ventana de ‘plot’\nIncluír gráficos, sitios de web, y fotos en sus códigos\n\n\nSus mensajes y errores está en ‘consolo’\nsus mensajes y errores está en el markdown\n\n\nSolo exportar como script\nPuede exportar como pdf, html o documento de word\n\n\nLo mas básico, pero fácil\nmas complicado, pero mejor\n\n\n\nVamos a usar R Markdown en este clase porque si sus códigos no se funciona, tampoco se exporta su R Markdown. Entonces, si exporte su Markdown como PDF, significa que sus códigos funciona.\n\n\n\nPrimero, instalar el paquete en el consolo: install.packages(“rmarkdown”)\nDistinto a los otros paquetes, solo necesita instalar y no debería hacer nada mas despúes.\nPara empezar un ‘R Markdown’ tocar el cruz verde, llamar la en manera descriptiva en su carpeta de proyecto.\n\n\n\nMenú de opciones.\n\n\n\n\n\nR Markdown página principal.\n\n\nExiste cuatro componentes de un R Markdown allá: el ‘yaml’, cajas de códigos, un título, y texto de típo ‘markdown’.\n\n\nEl YAML (abajo), es el parte mas específico del R Markdown. Este parte se manda el título, estilo y formato del R Markdown. Había varías cosas que puede cambiar acá, pero por ahora, está bien quedarse como se genera automáticamente.\n\n\n\nEl YAML\n\n\nPor si caso quiere cambiar su estilo, o algo del YAML, puede investigar opciones acá: R Markdown YAML (inglés)\nTen cuidado con espacios, porque en el YAML es crucial que los espacios son exactamente correcto.\n\n\n\nEn R Markdown, puede usar texto normal como un documento de word, y por eso es muy útil por reportar y organizar lo que hace.\n\n\n\nR Markdown en R Studio y Markdown exportado\n\n\nAcá puede ver que resulta de su R Markdown. Hay textos normales, que aparece así, pero los cajas (en gris) contiene códigos y se hace cuando exportar su Markdown. Si tenga códigos que no se funciona, no puede exportar su Markdown.\nPara hacer una caja para códigos (se llama ‘code chunks’ en inglés), presione ‘ctrl + alt + i’.\nResultará una caja con {r} encima. Allá puede esconder sus códigos, con ‘include = TRUE/FALSE’ y echo = TRUE/FALSE adentro del {} (con echo=FALSE se hace sus códigos, pero solo aparece sus reesultados, con include=FALSE, se hace sus códigos, pero no aparece nada).\nEj:\n\nlibrary(tidyverse) # gráficos y organización de datos\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "Clases",
      "C2-RMarkdown"
    ]
  },
  {
    "objectID": "C2-RMarkdown.html#empezando-con-r-markdown",
    "href": "C2-RMarkdown.html#empezando-con-r-markdown",
    "title": "C2-RMarkdown",
    "section": "",
    "text": "Primero, instalar el paquete en el consolo: install.packages(“rmarkdown”)\nDistinto a los otros paquetes, solo necesita instalar y no debería hacer nada mas despúes.\nPara empezar un ‘R Markdown’ tocar el cruz verde, llamar la en manera descriptiva en su carpeta de proyecto.\n\n\n\nMenú de opciones.\n\n\n\n\n\nR Markdown página principal.\n\n\nExiste cuatro componentes de un R Markdown allá: el ‘yaml’, cajas de códigos, un título, y texto de típo ‘markdown’.\n\n\nEl YAML (abajo), es el parte mas específico del R Markdown. Este parte se manda el título, estilo y formato del R Markdown. Había varías cosas que puede cambiar acá, pero por ahora, está bien quedarse como se genera automáticamente.\n\n\n\nEl YAML\n\n\nPor si caso quiere cambiar su estilo, o algo del YAML, puede investigar opciones acá: R Markdown YAML (inglés)\nTen cuidado con espacios, porque en el YAML es crucial que los espacios son exactamente correcto.\n\n\n\nEn R Markdown, puede usar texto normal como un documento de word, y por eso es muy útil por reportar y organizar lo que hace.\n\n\n\nR Markdown en R Studio y Markdown exportado\n\n\nAcá puede ver que resulta de su R Markdown. Hay textos normales, que aparece así, pero los cajas (en gris) contiene códigos y se hace cuando exportar su Markdown. Si tenga códigos que no se funciona, no puede exportar su Markdown.\nPara hacer una caja para códigos (se llama ‘code chunks’ en inglés), presione ‘ctrl + alt + i’.\nResultará una caja con {r} encima. Allá puede esconder sus códigos, con ‘include = TRUE/FALSE’ y echo = TRUE/FALSE adentro del {} (con echo=FALSE se hace sus códigos, pero solo aparece sus reesultados, con include=FALSE, se hace sus códigos, pero no aparece nada).\nEj:\n\nlibrary(tidyverse) # gráficos y organización de datos\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "Clases",
      "C2-RMarkdown"
    ]
  },
  {
    "objectID": "C2-RMarkdown.html#exportación-de-su-r-markdown",
    "href": "C2-RMarkdown.html#exportación-de-su-r-markdown",
    "title": "C2-RMarkdown",
    "section": "Exportación de su R Markdown",
    "text": "Exportación de su R Markdown\nPara exportar, usa ‘knit’. Para hacerse, debería tener todo en orden (si sus códigos no se funcionan, tampoco funciona el ‘knit’). Usualmente, si no cambie, se exporta como ‘html’ (útil para sitios de web), pero puede cambiar en un documento de word o pdf.\n\n\n\nOpciones para ‘knit’, o sea, exportar su R Markdown",
    "crumbs": [
      "Clases",
      "C2-RMarkdown"
    ]
  },
  {
    "objectID": "C1-Intro.html",
    "href": "C1-Intro.html",
    "title": "C1-Intro",
    "section": "",
    "text": "R es uno de los opciones para analizar y analizar datos. Para usarla facilmente, puede usar R Studio. Se pone mas facíl su uso de R.\n\nDescargar R\nDescargar R Studio\n\n\n\nEl proceso general de hacer ciencias de datos empece explorando sus datos (importar y ordenar), despúes analizar (transformar, visualizar, y modelar), y comunicar.\n\n\n\nWickham & Grolemund, 2023",
    "crumbs": [
      "Clases",
      "C1-Intro"
    ]
  },
  {
    "objectID": "C1-Intro.html#ciencias-de-datos",
    "href": "C1-Intro.html#ciencias-de-datos",
    "title": "C1-Intro",
    "section": "",
    "text": "El proceso general de hacer ciencias de datos empece explorando sus datos (importar y ordenar), despúes analizar (transformar, visualizar, y modelar), y comunicar.\n\n\n\nWickham & Grolemund, 2023",
    "crumbs": [
      "Clases",
      "C1-Intro"
    ]
  },
  {
    "objectID": "C1-Intro.html#guardar-un-excel-como-csv",
    "href": "C1-Intro.html#guardar-un-excel-como-csv",
    "title": "C1-Intro",
    "section": "Guardar un excel como csv",
    "text": "Guardar un excel como csv\nSolo puede guardar una hoja de excel en un csv. Si este listo para guardar, elije la hoja deseada y selecciona ‘guardar como’ y examinar su carpeta.\n\n\n\nElije ’csv (delimitado por comma) (*csv)",
    "crumbs": [
      "Clases",
      "C1-Intro"
    ]
  },
  {
    "objectID": "C10-modelosnonparametricos.html",
    "href": "C10-modelosnonparametricos.html",
    "title": "Variables con GLM/GAM",
    "section": "",
    "text": "Variables con GLM/GAM\nEs importante elegir todos los variables que pueden afectar su variable respuesta.Para evaluar cuales variables sean importantes, puedes ver a sus dotplots.Por ejemplo, si quiere saber si el largo pico de un pingüino es predicado por su masa corporal, puede analizar la relación con solo largo pico y masa corporal.\n\n\n\n\n\n\n\n\n\nPero, si ve el grafico de la regresión lineal por solo largo pico y masa corporal, aparece que hay mucha variación. Así es importante añadir variables que quizás afecten los pingüinos.\n\n\n\n\n\n\n\n\n\nSegún los gráficos, ve que los especies son buen separados, y la isla también. Ano y sexo no aparece tal tan distinto, pero quizás hay poquita variación con sexo. Entonces, deberíamos empezar este modelo con masa corporal, especie, isla y sexo.\nAsí que ahora sabe todos los variables que quizás tengan afecto, puede empezar a modelar.\n\n\n\n\n\n\n\n\n\n           R2m       R2c\n[1,] 0.4771225 0.4771225\n\n\nResulta que el modelo final contiene la isla y el masa corporal como variables explicativas.\nPero, hay dos problemas: 1. el valor R2 es bajo (.47) y 2) no se cumple con el homogeneidad de la varianza. Que puede hacer?\nPuede añadir una interacción. Por ejemplo entre la especie y la isla (así que sabe que había especies en una isla que no son en otros).\n\nte &lt;- lm(data=pinguinos, largo_pico_mm ~ isla*especie + masa_corporal_g)\nter &lt;-simulateResiduals(te)\nplot(ter)\n\n\n\n\n\n\n\nr.squaredGLMM(te)\n\n           R2m       R2c\n[1,] 0.8061791 0.8061791\n\n\nAhora el modelo se cumple con los supuestos y tambien tiene un R2 alta.\n\nsummary(te)\n\n\nCall:\nlm(formula = largo_pico_mm ~ isla * especie + masa_corporal_g, \n    data = pinguinos)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-6.949 -1.673  0.100  1.497  9.290 \n\nCoefficients: (4 not defined because of singularities)\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  25.0830286  1.1101663  22.594  &lt; 2e-16 ***\nislaDream                    -0.3935763  0.4849432  -0.812    0.418    \nislaTorgersen                -0.0117121  0.4952551  -0.024    0.981    \nespecieBarbijo               10.1646621  0.4345343  23.392  &lt; 2e-16 ***\nespeciePapúa                  3.4131290  0.5728131   5.959 6.43e-09 ***\nmasa_corporal_g               0.0037448  0.0002828  13.241  &lt; 2e-16 ***\nislaDream:especieBarbijo             NA         NA      NA       NA    \nislaTorgersen:especieBarbijo         NA         NA      NA       NA    \nislaDream:especiePapúa               NA         NA      NA       NA    \nislaTorgersen:especiePapúa           NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.407 on 336 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.8085,    Adjusted R-squared:  0.8056 \nF-statistic: 283.7 on 5 and 336 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nModelos aditivos generalizados (GAM/MAG)\nEn que situación necesita un GAM?\nPor supuesto si tenga datos non-normales, o que no se cumplen con el homogeneidad de varianza. O si ya intentaba con GLM y ningúna familia adecuada funciona incluso con interacciones.\nPero, la idea del GAM es que puede usarla para ajustar sus valores por datos que no son exactamente lineal, o que son super non-lineal. Funciona a hacer una línea que, en cada parte, ajuste la inclinación para representar mejor sus datos. Un GAM está diseñado a ajustar su línea para los variables que tienen relaciones non-lineales. O sea, pueda ajustar la curva por cada variable para crear una forma que si reflejen sus datos de hecho.\n\n\n[1] Tiempo_ms  accel      is.outlier is.extreme\n&lt;0 rows&gt; (or 0-length row.names)\n\n\nPor ejemplo, este gráfico es una relación lineal entre tiempo y acceleración de motos experimentales.\n\n\n\n\n\n\n\n\n\nComo pude esperar desde las leyes físicas, no es una relación lineal, así que un glm no sea apto para estos datos.\n\n\n\n\n\n\n\n\n\nSegún los gráficos, es obvio que un gam se representa mejor el forma y relación de los datos.\n\n\nSuposiciones\nEl GAM es semi-parametrico. O sea, hay algunos supuestos, pero el supuesto de normalidad y heterogeneidad no están. Todavía debería asegurar que no hay autocorrelación, y que sus observaciones son independentes. También eliminar algunas outliers, cambiar los tipos de datos, y transformar sus datos si los medidas sean distintos.\n\nYa lo hizo la normalización, eliminación de outliers, pruebas por correlación, y cambio de tipos de datos, pero no olvide a hacerlos antes de hacer un gam\n\n\nlibrary(mgcv)\nlibrary(mgcViz)\n\nLoading required package: qgam\n\n\n\nAttaching package: 'qgam'\n\n\nThe following object is masked from 'package:permute':\n\n    check\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nRegistered S3 method overwritten by 'mgcViz':\n  method from  \n  +.gg   GGally\n\n\n\nAttaching package: 'mgcViz'\n\n\nThe following object is masked from 'package:lattice':\n\n    qq\n\n\nThe following objects are masked from 'package:stats':\n\n    qqline, qqnorm, qqplot\n\nmcgam &lt;- gam(data=mcy, accel ~ s(Tiempo_ms))\n\ngam.check(mcgam)\n\n\n\n\n\n\n\n\n\nMethod: GCV   Optimizer: magic\nSmoothing parameter selection converged after 8 iterations.\nThe RMS GCV score gradient at convergence was 4.130761e-07 .\nThe Hessian was positive definite.\nModel rank =  10 / 10 \n\nBasis dimension (k) checking results. Low p-value (k-index&lt;1) may\nindicate that k is too low, especially if edf is close to k'.\n\n               k'  edf k-index p-value\ns(Tiempo_ms) 9.00 8.69    1.15    0.94\n\nsummary(mcgam)\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\naccel ~ s(Tiempo_ms)\n\nParametric coefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept) 6.739e-17  4.036e-02       0        1\n\nApproximate significance of smooth terms:\n               edf Ref.df     F p-value    \ns(Tiempo_ms) 8.693  8.972 53.52  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.783   Deviance explained = 79.8%\nGCV = 0.23374  Scale est. = 0.2167    n = 133\n\n\n\nlibrary(gratia)\n\nRegistered S3 method overwritten by 'gratia':\n  method       from  \n  simulate.gam mgcViz\n\n\n\nAttaching package: 'gratia'\n\n\nThe following object is masked from 'package:latticeExtra':\n\n    rootogram\n\n\nThe following object is masked from 'package:stringr':\n\n    boundary\n\ndraw(mcgam, residuals = TRUE)\n\n\n\n\n\n\n\n\nEl grafico se muestra los residuos y aparece super bien. Los residuos son los números que resultan cuando entra un x en su ecuación, entonces quiere que su grafico de residuos y los puntos originales sean juntos, porque eso es un modelo fuerte. Acá puede ver que los residuos si capturan la mayoría de los puntos y esta a medida de los partes mas anchos. Entonces, es un buen modelo.\nTambién, sabe desde el ‘summary’ que el R2 es 0.78, o sea, que el modelo cuenta por 78% de la variación en acceleración. Eso es bueno.\n\n\nResumen\nEn resumen, los GAMs son bueno para datos/relaciones non-lineales porque puede ajustar los variables explicativas y representar curvas.\nLos datos no tendrían que ser normales ni tampoco cumplir con la homogeneidad de la varianza. Pero sí deben ser sin outliers, transformada si había medidas distintas, y sin correlaciones entre variables explicativas.\nPuede evaluar su GAM con gráficos diagnósticos, con el R2, y con el ‘gam.check’.",
    "crumbs": [
      "Clases",
      "Variables con GLM/GAM"
    ]
  },
  {
    "objectID": "C10-modelosnonparametricos.html#en-que-situación-necesita-un-gam",
    "href": "C10-modelosnonparametricos.html#en-que-situación-necesita-un-gam",
    "title": "Modelos aditivos generalizados (GAM/MAG)",
    "section": "",
    "text": "Por supuesto si tenga datos non-normales, o que no se cumplen con el homogeneidad de varianza. O si ya intentaba con GLM y ningúna familia adecuada funciona.\nPero además, si los datos no son lineales, o sea, hay curvas en la distribución. O si el GLM no es super adecuada.\nLa ultima semana, trabaje con GLMs y como elegir un modelo desde un par de modelos. Los valores de AIC, sus grados de libertad (degrees of freedom/df), y cumplimiento con los supuestos pueden ayudarse a elegir el modelo mas adecuado.\nPero hay mas que debe hacer. Un modelo puede ser adecuado, y técnicamente correcto, pero todavía ser lo menos apto, o sea, que pueda todavía crear un modelo mejor. El valor de R2 esta usado para evaluar la fuerza de su modelo.\n\nABBaseBN3 &lt;- glm.nb(data=ac, AcaroBrachy ~ DensSustrato + Topo)\n\nsummary(ABBaseBN3)\n\n\nCall:\nglm.nb(formula = AcaroBrachy ~ DensSustrato + Topo, data = ac, \n    init.theta = 1.011224335, link = log)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)   2.27583    0.48372   4.705 2.54e-06 ***\nDensSustrato -0.00903    0.01105  -0.817    0.414    \nTopoHummock   0.54501    0.26673   2.043    0.041 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(1.0112) family taken to be 1)\n\n    Null deviance: 84.907  on 69  degrees of freedom\nResidual deviance: 79.446  on 67  degrees of freedom\nAIC: 453.64\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  1.011 \n          Std. Err.:  0.191 \n\n 2 x log-likelihood:  -445.643 \n\nr.squaredGLMM(ABBaseBN3)\n\nWarning: the null model is only correct if all the variables it uses are identical \nto those used in fitting the original model.\n\n\n                 R2m        R2c\ndelta     0.07979600 0.07979600\nlognormal 0.11401243 0.11401243\ntrigamma  0.04788092 0.04788092\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nAcaroBrachy ~ s(DensSustrato) + s(CuentaAgua) + Topo\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    7.423      1.480   5.016 4.38e-06 ***\nTopoHummock    3.514      2.613   1.345    0.183    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                  edf Ref.df     F p-value  \ns(DensSustrato) 2.341  2.965 1.807  0.1948  \ns(CuentaAgua)   1.000  1.000 3.982  0.0502 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =   0.14   Deviance explained = 19.4%\nGCV = 94.601  Scale est. = 87.382    n = 70\n\n\n\n\n\n\n\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'",
    "crumbs": [
      "Clases",
      "Modelos aditivos generalizados (GAM/MAG)"
    ]
  },
  {
    "objectID": "C3-Tidyverse.html",
    "href": "C3-Tidyverse.html",
    "title": "C3-Tidyverse",
    "section": "",
    "text": "Usualmente, nuestros datos son desorganizados o díficil a usar en R, especialmente a respeto a los visualizaciónes. Y, a veces es útil filtrarla, cambiar nombres, quitar filas, y mas.\n\n\nHoy usamos dos paquetes, ‘tidyverse’ y ‘dplyr’. (Recuerda installarlas con ‘install.packages()’ en el consolo (abajo))\n\nlibrary(tidyverse) # organización (pipe, gráficos)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr) # cambiar datos (rename, filter, mutate)\n\n\n\n\n\n\n\nTípo\nsintaxis\n\n\n\n\nLista\nc(x, y, z)\n\n\nTexto\n“texto” o ‘texto’\n\n\nDataframe (datos) y columna\ndataframe$columna\n\n\nGuardar/llamar datos/columnas\nnuevo &lt;- operación\n\n\n‘Pipe’ (en tidyverse)\n%&gt;% o |&gt;\n\n\n\n\n# lista guardado como nuevo lista (importante, solo es una lista ahora, no un dataframe)\n\nlista &lt;- c(1, 2, 3, 4, 5)\nhead(lista) # ver los 6 primeros líneas\n\n[1] 1 2 3 4 5\n\n\nAhora, ‘lista’ solo contiene una columna con 5 números, o sea, es una lista. Para añadir mas información, puede hacer lo mismo, pero crear también con un nombre, pero si use ‘$’ quede como una lista.\n\n# usar el $ para identificar el nombre del objeto (dataframe o lista) y llamar la nueva columna\nlista$nuevocolumno &lt;- c(\"uno\", \"dos\", \"tres\", \"cuatro\", \"cinco\")\n\nWarning in lista$nuevocolumno &lt;- c(\"uno\", \"dos\", \"tres\", \"cuatro\", \"cinco\"):\nCoercing LHS to a list\n\n\n\n\n\nPuede añadir columnas con información nuevo o sin información.\nPor ejemplo:\n\n# guardando sus datos con un nombre\ndata(\"iris\")\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nPuede ver que las columnas son llamados en inglés. Si queremos en español, podemos añadir una columna llamado en español.\n\n# puede usar '$' o sea, datos$columna deseado\n# recurede que '&lt;-' sirve para llamar o guardar algo\niris$LargoSepalo &lt;- iris$Sepal.Length\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo\n1          5.1         3.5          1.4         0.2  setosa         5.1\n2          4.9         3.0          1.4         0.2  setosa         4.9\n3          4.7         3.2          1.3         0.2  setosa         4.7\n4          4.6         3.1          1.5         0.2  setosa         4.6\n5          5.0         3.6          1.4         0.2  setosa         5.0\n6          5.4         3.9          1.7         0.4  setosa         5.4\n\n# puede ver que tenemos el nuevo\n\nTambién es posible hacer matemáticas con las columnas y guardarlos en una nueva columna.\n\n\n\nOperaciónes matemáticas\nFunción\n\n\n\n\nMultiplicación\n*\n\n\nSuma\n+\n\n\nResta\n-\n\n\nDivisión\n/\n\n\nRaíz cuadrada\nsqrt()\n\n\nPromedio\nmean()\n\n\nMínimo\nmin()\n\n\nMáximo\nmax()\n\n\n\n\n# acá multiplica el largo sepalo y ancho sepalo y guardar en nueva columna llamado 'volumen' en su marco de datos 'iris'\niris$volumen &lt;- (iris$Sepal.Length * iris$Sepal.Width)\nhead(iris) # ver los primeros seis filas del iris para asegurar que 'volumen' ya estaba añadido\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n\n# acá toma el raíz cuadrada del largo sepalo, pero no lo guarda\nsqrt(iris$LargoSepalo)\n\n  [1] 2.258318 2.213594 2.167948 2.144761 2.236068 2.323790 2.144761 2.236068\n  [9] 2.097618 2.213594 2.323790 2.190890 2.190890 2.073644 2.408319 2.387467\n [17] 2.323790 2.258318 2.387467 2.258318 2.323790 2.258318 2.144761 2.258318\n [25] 2.190890 2.236068 2.236068 2.280351 2.280351 2.167948 2.190890 2.323790\n [33] 2.280351 2.345208 2.213594 2.236068 2.345208 2.213594 2.097618 2.258318\n [41] 2.236068 2.121320 2.097618 2.236068 2.258318 2.190890 2.258318 2.144761\n [49] 2.302173 2.236068 2.645751 2.529822 2.626785 2.345208 2.549510 2.387467\n [57] 2.509980 2.213594 2.569047 2.280351 2.236068 2.428992 2.449490 2.469818\n [65] 2.366432 2.588436 2.366432 2.408319 2.489980 2.366432 2.428992 2.469818\n [73] 2.509980 2.469818 2.529822 2.569047 2.607681 2.588436 2.449490 2.387467\n [81] 2.345208 2.345208 2.408319 2.449490 2.323790 2.449490 2.588436 2.509980\n [89] 2.366432 2.345208 2.345208 2.469818 2.408319 2.236068 2.366432 2.387467\n [97] 2.387467 2.489980 2.258318 2.387467 2.509980 2.408319 2.664583 2.509980\n[105] 2.549510 2.756810 2.213594 2.701851 2.588436 2.683282 2.549510 2.529822\n[113] 2.607681 2.387467 2.408319 2.529822 2.549510 2.774887 2.774887 2.449490\n[121] 2.626785 2.366432 2.774887 2.509980 2.588436 2.683282 2.489980 2.469818\n[129] 2.529822 2.683282 2.720294 2.810694 2.529822 2.509980 2.469818 2.774887\n[137] 2.509980 2.529822 2.449490 2.626785 2.588436 2.626785 2.408319 2.607681\n[145] 2.588436 2.588436 2.509980 2.549510 2.489980 2.428992\n\n# acá toma el raíz cuadrada otra vez pero guardanlos\niris$sqrtls &lt;- sqrt(iris$LargoSepalo)\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n    sqrtls\n1 2.258318\n2 2.213594\n3 2.167948\n4 2.144761\n5 2.236068\n6 2.323790\n\n\nAdemas puede añadir datos manualmente.\n\niris$numerosrandom &lt;- c()\n\nVamos a hacerlo juntos!\n\n\n\nPuede elegir columnas o filas para solo usar columnas especificos queridos.\nEl sintaxis es dataframe[número de filas, número de columnas]\nPor ejemplo:\n\n# acá solo ha elegido las columnas 2 y 3 (: significa 2 hasta 3)\nhead(iris[,2:3])\n\n  Sepal.Width Petal.Length\n1         3.5          1.4\n2         3.0          1.4\n3         3.2          1.3\n4         3.1          1.5\n5         3.6          1.4\n6         3.9          1.7\n\n\n\n# acá ha elegido las filas 2 hasta 9 \niris[2:9,]\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n7          4.6         3.4          1.4         0.3  setosa         4.6   15.64\n8          5.0         3.4          1.5         0.2  setosa         5.0   17.00\n9          4.4         2.9          1.4         0.2  setosa         4.4   12.76\n    sqrtls\n2 2.213594\n3 2.167948\n4 2.144761\n5 2.236068\n6 2.323790\n7 2.144761\n8 2.236068\n9 2.097618\n\n\n\n# acá ha elegido las columnas 1 hasta 3 y las filas 1 hasta 6\niris[1:6,1:3]\n\n  Sepal.Length Sepal.Width Petal.Length\n1          5.1         3.5          1.4\n2          4.9         3.0          1.4\n3          4.7         3.2          1.3\n4          4.6         3.1          1.5\n5          5.0         3.6          1.4\n6          5.4         3.9          1.7\n\n\nPuede guardar con ‘&lt;-’ siquieres usarla despues\nPor ejemplo:\n\nirispoco &lt;- iris[1:6, 2:8]\n\n\n\n\nSi tenga un nombre de una columna y quiere cambiarlo, puedes usar el función ‘rename()’\nEl sintaxis es rename(dataframe, nuevonombre = nombreoriginal)\n\nhead(rename(iris, AnchoSepalo=Sepal.Width))\n\n  Sepal.Length AnchoSepalo Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n    sqrtls\n1 2.258318\n2 2.213594\n3 2.167948\n4 2.144761\n5 2.236068\n6 2.323790\n\n\n\n\n\nEn sus datos, hay columnas y filas. Puede filtrar por valores en sus columnas. Por ejemplo, con los datos de iris, podemos filtrar por sepalos con un largo mas de 5mm o podemos filtrar por solo el espeice ‘setosa’.\n\n# filtrar por solo la epecie \"setosa\" Si filtre por texto, debería usar '==' por números '=', \"&gt;\",\"&lt;\", \"&gt;=\", etc.\nirissetosa &lt;- filter(iris, Species == 'setosa')\nhead(irissetosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n    sqrtls\n1 2.258318\n2 2.213594\n3 2.167948\n4 2.144761\n5 2.236068\n6 2.323790\n\n\n\n# filtrar por los especies que no son setosa\nirisnonsetosa &lt;- filter(iris, Species != 'setosa')\nhead(irisnonsetosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width    Species LargoSepalo\n1          7.0         3.2          4.7         1.4 versicolor         7.0\n2          6.4         3.2          4.5         1.5 versicolor         6.4\n3          6.9         3.1          4.9         1.5 versicolor         6.9\n4          5.5         2.3          4.0         1.3 versicolor         5.5\n5          6.5         2.8          4.6         1.5 versicolor         6.5\n6          5.7         2.8          4.5         1.3 versicolor         5.7\n  volumen   sqrtls\n1   22.40 2.645751\n2   20.48 2.529822\n3   21.39 2.626785\n4   12.65 2.345208\n5   18.20 2.549510\n6   15.96 2.387467\n\n\n\n# filtrar por los especies que no son setosa\nirisSepG5 &lt;- filter(iris, Sepal.Length &gt; 5)\nhead(irisSepG5)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n3          5.4         3.7          1.5         0.2  setosa         5.4   19.98\n4          5.8         4.0          1.2         0.2  setosa         5.8   23.20\n5          5.7         4.4          1.5         0.4  setosa         5.7   25.08\n6          5.4         3.9          1.3         0.4  setosa         5.4   21.06\n    sqrtls\n1 2.258318\n2 2.323790\n3 2.323790\n4 2.408319\n5 2.387467\n6 2.323790\n\ndim(irisSepG5)\n\n[1] 118   8\n\n\n\n\n\n\n\n\n\nOperador\nSímbolo\n\n\n\n\nFiltrar texto por algo especifico\n== “texto”\n\n\nFiltrar por número exacto\n= número\n\n\nFiltrar por número mas o menos del asignado\n&lt; o &gt; (‘&gt;=’ o ‘&lt;=’)\n\n\nFiltrar por el opuesto\n!= (números) !== (caracter)\n\n\nbuscar por ‘na’ sin datos\nis.na()\n\n\n\nVamos a probar juntos!\n\n\n\nCon ‘mutate’ puede cambiar datos en una manera distinta.\nPuede hacer varios cambios con ‘mutate’ desde crear nuevas columnas/variables hasta cambiar/sacar los que ya existen.\n\n# ejemplo, usando el 'pipe' para pasar datos (en vez de llamarla) y mutate para añadir variable con matemáticas\n\nhead(iris |&gt;\n  mutate(Vol = Sepal.Length*Sepal.Width))\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n    sqrtls   Vol\n1 2.258318 17.85\n2 2.213594 14.70\n3 2.167948 15.04\n4 2.144761 14.26\n5 2.236068 18.00\n6 2.323790 21.06\n\n\nPodemos sacar variables también.\n\n# para sacar un variable, usar el pipe con iris y llamar la columna para sacar igual 'NULL'\nhead(iris |&gt;\n  mutate(Vol= NULL))\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species LargoSepalo volumen\n1          5.1         3.5          1.4         0.2  setosa         5.1   17.85\n2          4.9         3.0          1.4         0.2  setosa         4.9   14.70\n3          4.7         3.2          1.3         0.2  setosa         4.7   15.04\n4          4.6         3.1          1.5         0.2  setosa         4.6   14.26\n5          5.0         3.6          1.4         0.2  setosa         5.0   18.00\n6          5.4         3.9          1.7         0.4  setosa         5.4   21.06\n    sqrtls\n1 2.258318\n2 2.213594\n3 2.167948\n4 2.144761\n5 2.236068\n6 2.323790",
    "crumbs": [
      "Clases",
      "C3-Tidyverse"
    ]
  },
  {
    "objectID": "C3-Tidyverse.html#recursos",
    "href": "C3-Tidyverse.html#recursos",
    "title": "C3-Tidyverse",
    "section": "recursos",
    "text": "recursos\nFiltrar, elegir, cambiar nombre, etc.. inglés\nFiltrar (español)\nmas de filtrar (español)",
    "crumbs": [
      "Clases",
      "C3-Tidyverse"
    ]
  },
  {
    "objectID": "C5-GGplot2.html",
    "href": "C5-GGplot2.html",
    "title": "C5-GGplot2",
    "section": "",
    "text": "El función ‘facet_wrap’ y ‘facet_grid’, mover los datos para que muestran mas.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(datos)\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot() # boxplot\n\n\n\n\n\n\n\n\nImagine que tenemos este gráfico con tres boxplots, seperado por especie del pinguino. Pero queremos tambien ver la distinción entre islas.\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot()+ # boxplot\n  facet_wrap(~isla)\n\n\n\n\n\n\n\n\nEl facet revela que en la isla Torgerson solo tiene el especie ‘Adelia’, y las otras dos tienen distintos especies de pinguinos. Tenemos ahora tres gráficos separados por isla.\nPodemos también usar mas que dos variables con ‘facet_grid’.\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot()+ # boxplot\n  facet_grid(rows=vars(isla), cols=vars(especie))\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nEs mas fácil ver ahora los especies y en cual isla estan.\n\n\n\nPor ser caso queremos hacer un gráfico con todos los características del pinguinos (alto pico, largo pico, largo aleta y masa corporal) no podemos porque solo podemos elegir un ‘y’ en las aesteticas. Pero, hay un función para cambiar el formato de sus datos, se llama ‘pivot’. Había pivot_longer y pivot_wider.\n\n\nFunciona así:\n\nElegir las columnas con variables que quiere poner juntos en una gráfica. Ahora es largo pico y alto pico del pinguinos, entonces los pone en cols=.\nDespués, elegimos un nombre para una columna para poner las nombres de las columnas (acá caracteristica) y una para una columna nuevo para los valores (acá Medidasmm)\nEl nuevo dataframe: ‘pinguinos_longer’ tiene dos nuevas columnas ‘caracteristica’ y ‘medidasmm’\n\n\npinguinos_longer &lt;- pivot_longer(data=pinguinos, cols=largo_pico_mm:alto_pico_mm, names_to=\"Caracteristica\", values_to=\"Medidasmm\")\npinguinos_longer\n\n# A tibble: 688 × 8\n   especie isla      largo_aleta_mm masa_corporal_g sexo    anio Caracteristica\n   &lt;fct&gt;   &lt;fct&gt;              &lt;int&gt;           &lt;int&gt; &lt;fct&gt;  &lt;int&gt; &lt;chr&gt;         \n 1 Adelia  Torgersen            181            3750 macho   2007 largo_pico_mm \n 2 Adelia  Torgersen            181            3750 macho   2007 alto_pico_mm  \n 3 Adelia  Torgersen            186            3800 hembra  2007 largo_pico_mm \n 4 Adelia  Torgersen            186            3800 hembra  2007 alto_pico_mm  \n 5 Adelia  Torgersen            195            3250 hembra  2007 largo_pico_mm \n 6 Adelia  Torgersen            195            3250 hembra  2007 alto_pico_mm  \n 7 Adelia  Torgersen             NA              NA &lt;NA&gt;    2007 largo_pico_mm \n 8 Adelia  Torgersen             NA              NA &lt;NA&gt;    2007 alto_pico_mm  \n 9 Adelia  Torgersen            193            3450 hembra  2007 largo_pico_mm \n10 Adelia  Torgersen            193            3450 hembra  2007 alto_pico_mm  \n# ℹ 678 more rows\n# ℹ 1 more variable: Medidasmm &lt;dbl&gt;\n\n\nAhora podemos hacerse en ggplot.\n\npinguinos_longer %&gt;%\n  ggplot(aes(x=Medidasmm, color=Caracteristica))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nY puede hacer un facet con lo mismo.\n\npinguinos_longer %&gt;%\n  ggplot(aes(x=Medidasmm, color=Caracteristica))+\n  geom_boxplot()+\n  facet_wrap(~Caracteristica)\n\n\n\n\n\n\n\n\nEstos dos tecnicas son mas dificíl pero imensamente útil.",
    "crumbs": [
      "Clases",
      "C5-GGplot2"
    ]
  },
  {
    "objectID": "C5-GGplot2.html#facet",
    "href": "C5-GGplot2.html#facet",
    "title": "C5-GGplot2",
    "section": "",
    "text": "El función ‘facet_wrap’ y ‘facet_grid’, mover los datos para que muestran mas.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(datos)\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot() # boxplot\n\n\n\n\n\n\n\n\nImagine que tenemos este gráfico con tres boxplots, seperado por especie del pinguino. Pero queremos tambien ver la distinción entre islas.\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot()+ # boxplot\n  facet_wrap(~isla)\n\n\n\n\n\n\n\n\nEl facet revela que en la isla Torgerson solo tiene el especie ‘Adelia’, y las otras dos tienen distintos especies de pinguinos. Tenemos ahora tres gráficos separados por isla.\nPodemos también usar mas que dos variables con ‘facet_grid’.\n\npinguinos %&gt;%  # nombre de sus datos/dataframe y el pipe %&gt;% o |&gt;\n  ggplot(aes(x=largo_pico_mm, color=especie))+ # empece un gráfico con 'ggplot' y aesteticas (aes())\n  geom_boxplot()+ # boxplot\n  facet_grid(rows=vars(isla), cols=vars(especie))\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nEs mas fácil ver ahora los especies y en cual isla estan.",
    "crumbs": [
      "Clases",
      "C5-GGplot2"
    ]
  },
  {
    "objectID": "C5-GGplot2.html#pivot",
    "href": "C5-GGplot2.html#pivot",
    "title": "C5-GGplot2",
    "section": "",
    "text": "Por ser caso queremos hacer un gráfico con todos los características del pinguinos (alto pico, largo pico, largo aleta y masa corporal) no podemos porque solo podemos elegir un ‘y’ en las aesteticas. Pero, hay un función para cambiar el formato de sus datos, se llama ‘pivot’. Había pivot_longer y pivot_wider.\n\n\nFunciona así:\n\nElegir las columnas con variables que quiere poner juntos en una gráfica. Ahora es largo pico y alto pico del pinguinos, entonces los pone en cols=.\nDespués, elegimos un nombre para una columna para poner las nombres de las columnas (acá caracteristica) y una para una columna nuevo para los valores (acá Medidasmm)\nEl nuevo dataframe: ‘pinguinos_longer’ tiene dos nuevas columnas ‘caracteristica’ y ‘medidasmm’\n\n\npinguinos_longer &lt;- pivot_longer(data=pinguinos, cols=largo_pico_mm:alto_pico_mm, names_to=\"Caracteristica\", values_to=\"Medidasmm\")\npinguinos_longer\n\n# A tibble: 688 × 8\n   especie isla      largo_aleta_mm masa_corporal_g sexo    anio Caracteristica\n   &lt;fct&gt;   &lt;fct&gt;              &lt;int&gt;           &lt;int&gt; &lt;fct&gt;  &lt;int&gt; &lt;chr&gt;         \n 1 Adelia  Torgersen            181            3750 macho   2007 largo_pico_mm \n 2 Adelia  Torgersen            181            3750 macho   2007 alto_pico_mm  \n 3 Adelia  Torgersen            186            3800 hembra  2007 largo_pico_mm \n 4 Adelia  Torgersen            186            3800 hembra  2007 alto_pico_mm  \n 5 Adelia  Torgersen            195            3250 hembra  2007 largo_pico_mm \n 6 Adelia  Torgersen            195            3250 hembra  2007 alto_pico_mm  \n 7 Adelia  Torgersen             NA              NA &lt;NA&gt;    2007 largo_pico_mm \n 8 Adelia  Torgersen             NA              NA &lt;NA&gt;    2007 alto_pico_mm  \n 9 Adelia  Torgersen            193            3450 hembra  2007 largo_pico_mm \n10 Adelia  Torgersen            193            3450 hembra  2007 alto_pico_mm  \n# ℹ 678 more rows\n# ℹ 1 more variable: Medidasmm &lt;dbl&gt;\n\n\nAhora podemos hacerse en ggplot.\n\npinguinos_longer %&gt;%\n  ggplot(aes(x=Medidasmm, color=Caracteristica))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nY puede hacer un facet con lo mismo.\n\npinguinos_longer %&gt;%\n  ggplot(aes(x=Medidasmm, color=Caracteristica))+\n  geom_boxplot()+\n  facet_wrap(~Caracteristica)\n\n\n\n\n\n\n\n\nEstos dos tecnicas son mas dificíl pero imensamente útil.",
    "crumbs": [
      "Clases",
      "C5-GGplot2"
    ]
  },
  {
    "objectID": "C7-correlacion.html",
    "href": "C7-correlacion.html",
    "title": "C7-correlacion",
    "section": "",
    "text": "Antes de que pueda hacer un modelo, debería tener en cuenta que sus datos pueden tener valores extremos, o sea, outliers.\nOutliers son valores extremos por sus datos. Pueden ser errores de observación o poblaciónes que son realmente más grande.\nPrimero, hacer un boxplot de su variable de respuesta para ver si hay outliers (o sea, puntos).\n\n\n\n\n\n\n\n\n\nTenemos ambas ‘outliers’ acá. El método general aceptado es usar la distribución normal y eliminar todo que esta mas de 3 deviaciones estándar desde el promedio (arriba y abajo).\n\n\n\n\n\nA hacerse, identificar los valores atípicos y después eliminarlos y guardar en un dataframe nuevo.\n\nlibrary(rstatix)\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(outForest)\n\npinguinos &lt;- datos::pinguinos\n\npinguinos$ab &lt;- sample(100, size = nrow(pinguinos), replace = TRUE)\n\npinguinos$abo &lt;- generateOutliers(pinguinos$ab, p = 0.05, sd_factor = 5, seed = NULL)\n\nquartiles &lt;- quantile(pinguinos$abo, probs=c(.25, .75), na.rm = FALSE)\nIQR &lt;- IQR(pinguinos$abo)\n\n# -3 deviaciónes estander \nLower &lt;- quartiles[1] - 1.5*IQR\n\n# +3 deviaciónes estander\nUpper &lt;- quartiles[2] + 1.5*IQR \n\npinguinos_sin_outliers &lt;- subset(pinguinos, pinguinos$abo &gt; Lower & pinguinos$abo &lt; Upper)\n\n\npinguinos_sin_outliers %&gt;%\n  ggplot(aes(x=abo))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nLa forma más común de modelos y funciones viene con suposiciones. Incluye: normalidad, homogeneidad de varianza, e independencia. Estos modelos se llama modelos normales. La última semana hablábamos de las funciones para hacer normal los variables, pero no se cumplen está requisito.\n\n\n\nHay varias maneras de probar correlación entre sus variables. Usualmente se pasa cuando tienes medidas de características que quizás crecen juntos. Por ejemplo, si quieres usar largo de cuerpo y largo de sépalo de una planta, es posible que son correlacionados porque el largo de sépalo debe crecer con el largo de cuerpo de la planta. En esta situación, puede probar y determinar si haya uno mejor que otro para usar. Puede hacerse eso antes con gráficos y después con elfactor de inflación de varianza.\n\nlibrary(corrgram)\n\npinguinos &lt;- datos::pinguinos\npinguinos$abundancia &lt;- sample(1:100, replace=T, nrow(pinguinos)) # hice una columna con valores de abundancia (falsos)\n\npinguinoscorr &lt;- pinguinos[c(3:6)] # (elegimos solo las columnas númericos)\n\ncorrgram(pinguinoscorr) # hacer el corrgram\n\n\n\n\n\n\n\n\nAcá podemos adivinar que largo aleta y masa corporal son correlacionados fuertemente positivamente (porque son azul oscuro). Además, aparece que quizás son correlacionados el alto pico y el largo aleta negativamente (porque son rojo oscuro).\nSi intentemos un modelo con estas variables:\n\nlmpincorr &lt;- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + largo_aleta_mm + masa_corporal_g)\n\nlibrary(car) \n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nvif(lmpincorr) # * variance inflation factor *\n\n  largo_pico_mm    alto_pico_mm  largo_aleta_mm masa_corporal_g \n       1.868456        1.621511        5.930499        4.192353 \n\n\nNúmeros más que 2-3 son problemáticas. Acá, como pensamos en el corrgram, el masa corporal y largo aleta son correlacionados (más que 3). Entonces, sacamos el largo aleta (lo más grande) e intentamos otra vez.\n\nlmpincorr2 &lt;- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + masa_corporal_g)\n\nvif(lmpincorr2) # * variance inflation factor *\n\n  largo_pico_mm    alto_pico_mm masa_corporal_g \n       1.554855        1.291907        1.889820 \n\n\n¡Ahora todo está bien, y podemos seguir con las otras pruebas!",
    "crumbs": [
      "Clases",
      "C7-correlacion"
    ]
  },
  {
    "objectID": "C7-correlacion.html#eliminar-outliers",
    "href": "C7-correlacion.html#eliminar-outliers",
    "title": "C7-correlacion",
    "section": "",
    "text": "Antes de que pueda hacer un modelo, debería tener en cuenta que sus datos pueden tener valores extremos, o sea, outliers.\nOutliers son valores extremos por sus datos. Pueden ser errores de observación o poblaciónes que son realmente más grande.\nPrimero, hacer un boxplot de su variable de respuesta para ver si hay outliers (o sea, puntos).\n\n\n\n\n\n\n\n\n\nTenemos ambas ‘outliers’ acá. El método general aceptado es usar la distribución normal y eliminar todo que esta mas de 3 deviaciones estándar desde el promedio (arriba y abajo).\n\n\n\n\n\nA hacerse, identificar los valores atípicos y después eliminarlos y guardar en un dataframe nuevo.\n\nlibrary(rstatix)\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(outForest)\n\npinguinos &lt;- datos::pinguinos\n\npinguinos$ab &lt;- sample(100, size = nrow(pinguinos), replace = TRUE)\n\npinguinos$abo &lt;- generateOutliers(pinguinos$ab, p = 0.05, sd_factor = 5, seed = NULL)\n\nquartiles &lt;- quantile(pinguinos$abo, probs=c(.25, .75), na.rm = FALSE)\nIQR &lt;- IQR(pinguinos$abo)\n\n# -3 deviaciónes estander \nLower &lt;- quartiles[1] - 1.5*IQR\n\n# +3 deviaciónes estander\nUpper &lt;- quartiles[2] + 1.5*IQR \n\npinguinos_sin_outliers &lt;- subset(pinguinos, pinguinos$abo &gt; Lower & pinguinos$abo &lt; Upper)\n\n\npinguinos_sin_outliers %&gt;%\n  ggplot(aes(x=abo))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nLa forma más común de modelos y funciones viene con suposiciones. Incluye: normalidad, homogeneidad de varianza, e independencia. Estos modelos se llama modelos normales. La última semana hablábamos de las funciones para hacer normal los variables, pero no se cumplen está requisito.",
    "crumbs": [
      "Clases",
      "C7-correlacion"
    ]
  },
  {
    "objectID": "C7-correlacion.html#corrgram",
    "href": "C7-correlacion.html#corrgram",
    "title": "C7-correlacion",
    "section": "",
    "text": "Hay varias maneras de probar correlación entre sus variables. Usualmente se pasa cuando tienes medidas de características que quizás crecen juntos. Por ejemplo, si quieres usar largo de cuerpo y largo de sépalo de una planta, es posible que son correlacionados porque el largo de sépalo debe crecer con el largo de cuerpo de la planta. En esta situación, puede probar y determinar si haya uno mejor que otro para usar. Puede hacerse eso antes con gráficos y después con elfactor de inflación de varianza.\n\nlibrary(corrgram)\n\npinguinos &lt;- datos::pinguinos\npinguinos$abundancia &lt;- sample(1:100, replace=T, nrow(pinguinos)) # hice una columna con valores de abundancia (falsos)\n\npinguinoscorr &lt;- pinguinos[c(3:6)] # (elegimos solo las columnas númericos)\n\ncorrgram(pinguinoscorr) # hacer el corrgram\n\n\n\n\n\n\n\n\nAcá podemos adivinar que largo aleta y masa corporal son correlacionados fuertemente positivamente (porque son azul oscuro). Además, aparece que quizás son correlacionados el alto pico y el largo aleta negativamente (porque son rojo oscuro).\nSi intentemos un modelo con estas variables:\n\nlmpincorr &lt;- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + largo_aleta_mm + masa_corporal_g)\n\nlibrary(car) \n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nvif(lmpincorr) # * variance inflation factor *\n\n  largo_pico_mm    alto_pico_mm  largo_aleta_mm masa_corporal_g \n       1.868456        1.621511        5.930499        4.192353 \n\n\nNúmeros más que 2-3 son problemáticas. Acá, como pensamos en el corrgram, el masa corporal y largo aleta son correlacionados (más que 3). Entonces, sacamos el largo aleta (lo más grande) e intentamos otra vez.\n\nlmpincorr2 &lt;- lm(data=pinguinos, abundancia ~  largo_pico_mm + alto_pico_mm + masa_corporal_g)\n\nvif(lmpincorr2) # * variance inflation factor *\n\n  largo_pico_mm    alto_pico_mm masa_corporal_g \n       1.554855        1.291907        1.889820 \n\n\n¡Ahora todo está bien, y podemos seguir con las otras pruebas!",
    "crumbs": [
      "Clases",
      "C7-correlacion"
    ]
  },
  {
    "objectID": "C9-modelosnormales2.html",
    "href": "C9-modelosnormales2.html",
    "title": "Modelos lineales",
    "section": "",
    "text": "Modelos lineales\nHabía un montón de tipos de modelos que puede ocupar para analizar sus datos, desde lo más básico hasta ellos que pueden tomar combinaciones complicadas para representar sus datos. El prepósito de un modelo, generalmente, es crear una combinación de variables que puede representar una relación entre variables en una manera correcta y que crear valores predictivos.\nCon sistemas naturales, la idea puede ser tener predicciones para el futuro, pero frecuentemente se interesa mas la pregunta si haya relaciones entre variables o no.\nEs super importante tener y saber una hipótesis acá, y anota que nunca puede probar que tu hipótesis es verdad, sino que significancia decía que no hay evidencia que tu hipótesis es incorrecto. Tampoco, puede decir que una variable explicativa causa su variable de respuesta.\n\n\n\n\n\n¡Por esta razón, su interpretación de sus propios resultados con conocimiento profundo de su proyecto es super importante!\nCasi nunca puede decir que algo causa otra, pero si conozca bien su proyecto y sistema, podría elucidar conclusiones e ideas desde sus correlaciones.\n\n\n¿Como funciona los modelos lineales?\nDe nivel más básico, un modelo lineal toma dos variables y te cuenta la relación entre los dos, incluyendo si suben/bajan juntos y con qué incremento.  \nLa fórmula super básico es así:\nY = mX + b\nX e Y son tus variables explicativas (X) y respuesta (Y)\nM es la inclinación, o sea, el rato de cambio por Y con cada unidad de X\nB es la intersección (o sea, cuando no hay ninguna del Y: ¿cuántas unidades del X hay?)\nEntonces, desde un modelo lineal básico, puede aprender mucho. Este tipo de modelo mas básico, con una variable de respuesta y una variable explicativa es un modelo lineal, y se usa el función ‘lm()’\nPor ejemplo:\n\nac %&gt;%\n  ggplot(aes(x=AcaroBrachy, y=CuentaAgua))+\n  geom_point()+\n  geom_smooth(method=\"lm\")\n\n\n\n\n\n\n\n\n\nlmej &lt;- lm(data=ac, AcaroBrachy ~ CuentaAgua)\nsummary(lmej)\n\n\nCall:\nlm(formula = AcaroBrachy ~ CuentaAgua, data = ac)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-11.540  -6.439  -2.891   3.974  31.352 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 17.736018   3.545694   5.002 4.24e-06 ***\nCuentaAgua  -0.021935   0.008165  -2.687  0.00906 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.655 on 68 degrees of freedom\nMultiple R-squared:  0.09596,   Adjusted R-squared:  0.08267 \nF-statistic: 7.218 on 1 and 68 DF,  p-value: 0.009063\n\n\nEso es un ejemplo básico, pero normalmente en ecología/agronomía, los datos y relaciones son complicados. Si haya algo en el campo, tendría mas que una variable explicativa, porque hay otras cosas que se afectan su variable respuesta. Además, hay mas etapas que hacer su gráfico y después el modelo. Los supuestos son super importantes y sus tipos de datos también. Así que, empezamos con GLM.\n\n\nEmpezando con GLM\nGLMs son similares a modelos lineales, pero son mas flexible, y tienen poquito más tolerancia a residuos non-normales. Entonces, puede hacer un análisis/modelo más complicado con GLM.\nPara hacer un modelo, necesita una pregunta y/o una hipótesis.\nPor ejemplo: acá tenemos la abundancia de Acaro Brachy, densidad del sustrato, cantidad del agua en el sustrato, sustrato, nivel de cobertura de arbustos y topografia. Supongo que la pregunta central es cuales factores se impactan lo distribución de Acaro Brachy.\n\nhead(ac)\n\n  AcaroBrachy DensSustrato CuentaAgua  Sustrato Arbusto    Topo\n1          17        39.18     350.15   Sphagn1     Few Hummock\n2           2        54.99     434.81    Litter     Few Hummock\n3           4        46.07     371.72 Interface     Few Hummock\n4          23        48.19     360.50   Sphagn1     Few Hummock\n5           5        23.55     204.13   Sphagn1     Few Hummock\n6          19        57.32     311.55   Sphagn1     Few Hummock\n\n\nLa hipótesis puede incluir algunas de las variables o todos.\nUna hipótesis puede ser así: Habría una abundancia más alta de Acaro Brachy con sustratos mas densos y un nivel de cobertura de arbustos menos denso.. Entonces, probamos los variables ‘DensSustrato’ y ‘Arbusto’. Podemos incluir también el resto, pero no son lo prioridad.\nUna pregunta puede ser: ¿Cuáles factores medio ambientales impacta la abundancia del Acaro Brachy?\nAsí podemos usar todos los variables para ver cual tiene impacto.\n\nNo olvide a cambiar los tipos de datos ANTES de hacer modelos (y si quiere, transformar)\n\n\nac$DensSustrato &lt;- as.numeric(ac$DensSustrato)\nac$CuentaAgua &lt;- as.numeric(ac$CuentaAgua)\nac$Sustrato &lt;- as.factor(ac$Sustrato)\nac$Arbusto &lt;- as.factor(ac$Arbusto)\nac$Topo &lt;- as.factor(ac$Topo)\n\n\nY sacar sus outliers\n\n\nac %&gt;% \n  identify_outliers(AcaroBrachy)\n\n   AcaroBrachy DensSustrato CuentaAgua  Sustrato Arbusto    Topo is.outlier\n11          36        35.59     134.13   Sphagn3    Many Blanket       TRUE\n12          28        46.80     405.91   Sphagn1     Few Hummock       TRUE\n14          41        37.25     239.51 Interface    Many Blanket       TRUE\n29          42        32.86     323.12 Interface    Many Hummock       TRUE\n33          38        36.44     387.30   Sphagn2     Few Blanket       TRUE\n   is.extreme\n11      FALSE\n12      FALSE\n14       TRUE\n29       TRUE\n33      FALSE\n\nquartiles &lt;- quantile(ac$AcaroBrachy, probs=c(.25, .75), na.rm = FALSE)\nIQR &lt;- IQR(ac$AcaroBrachy)\n\n# -3 deviaciónes estander \nLower &lt;- quartiles[1] - 1.5*IQR\n\n# +3 deviaciónes estander\nUpper &lt;- quartiles[2] + 1.5*IQR \n\nacso &lt;- subset(ac, ac$AcaroBrachy &gt; Lower & ac$AcaroBrachy &lt; Upper)\n\n\nAdemás debería probar por correlaciónes antes\n\n\nlibrary(corrgram)\n\n\nAttaching package: 'corrgram'\n\n\nThe following object is masked from 'package:lattice':\n\n    panel.fill\n\nacc &lt;- ac[1:3]\ncorrgram(acc)\n\n\n\n\n\n\n\n\n\n\nOpciones para evaluar\nLo mejor modelo es lo mas simple, o sea, con la cantidad menor de variables explicativas. Pero, es importante considerar todos los variables que quizás afectan su variable respuesta. Y por eso, el numero de observaciones es importante: no puede usar mas variables explicativas que observaciones, y de hecho si tiene menos de diez observaciones debería usar menos variables explicativas que la mitad de sus observaciones.\n\n\nfamilia y supuestos\nEs super importante usar una familia que tiene sentido por sus datos. Además, algunas familias son poquito mas tolerante a datos con mas varianza o nonnormalidad (pero todavía necesita probar estas supuestos)\nPuede elegir su familia antes de hacer algo (de hecho, debe saber cual piensa que te sirve antes), pero igual puede probarlas con los supuestos.\n\nSintaxis completo para un glm\nglm(data=data, var_res ~ var_exp1 + var_exp2 + var_exp3 * var_exp4, family=“poisson”)\n\n\n1. Emepzar con una familia (si no elije una, es Gaussian)\n\n# acá es gaussian\nABBase &lt;- glm(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo)\n\nsimResABBase &lt;-simulateResiduals(ABBase) #DHARMa: hace resiudos y graficos para evaluar normalidad y homogeneidad de varianza\n# si hay líneas super curvados, rojo o valor P&lt;0.05) en el QQ plot (izquierda) no vale\n\nplot(simResABBase)\n\n\n\n\n\n\n\n# entonces acá es malo\n\n\n# intenta de nuevo con distinta familia (binomio negativo)\nABBaseBN &lt;- glm.nb(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo)\n\nsimResABBaseBN &lt;-simulateResiduals(ABBaseBN) #DHARMa: hace resiudos y graficos para evaluar normalidad y homogeneidad de varianza\n# si hay líneas super curvados, rojo o valor P&lt;0.05) en el QQ plot (izquierda) no vale\n\nplot(simResABBaseBN)\n\n\n\n\n\n\n\n# mejor, pero todavia con problemas\n\n\n# intenta de nuevo con distinta familia (binomio negativo)\nABBasep &lt;- glm(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo, family=\"poisson\")\n\nsimResABBasep &lt;-simulateResiduals(ABBasep) #DHARMa: hace resiudos y graficos para evaluar normalidad y homogeneidad de varianza\n# si hay líneas super curvados, rojo o valor P&lt;0.05) en el QQ plot (izquierda) no vale\n\nplot(simResABBasep)\n\n\n\n\n\n\n\n# superrr mal\n\nNinguno de estos tres modelos se cumple con los supuestos. Pero, puede elegir lo que es mejor ahora, porque a veces cuando eliminar variables, resultara que uno u otro fue el problema. Hice esto con los valores del criterio de información de Akaike (CIA o AIC).\n\nlibrary(MuMIn)\nlr_output.AIC &lt;- model.sel(ABBase, ABBaseBN, ABBasep) # incluir los modelos de interés\n\nlr_AIC.table&lt;-as.data.frame(lr_output.AIC)[7:12] # estas columnas pueden cambiar, entonces puede ver en el tab 'environment' también\n\nlr_AIC.table\n\n          class init.theta link df    logLik     AICc\nABBaseBN negbin       1.39  log 11 -211.5763 449.7044\nABBase      glm                 11 -250.1195 526.7907\nABBasep     glm                 10 -352.4087 728.5461\n\n\nAcá la mejor familia es el binomio negativo, que también fue lo mas cerca a normal según los gráficos. Entonces parte allá. Antes que sigue, tenemos que probar el intercorrelación también con ‘VIF’ del paquete ‘car’.\n\nvif(ABBaseBN) \n\n                 GVIF Df GVIF^(1/(2*Df))\nDensSustrato 1.278126  1        1.130542\nCuentaAgua   1.537536  1        1.239974\nSustrato     1.650343  6        1.042632\nTopo         1.529773  1        1.236840\n\n# todos los valores deben ser &lt;2\n\nNo hay intercorrelación problemática, entonces siga.\n\n\n\nElegiendo modelo mejor\nHabía ambas opciones para elegir un modelo, y eliminar variables que son menos importante. Acá muestra tres básicos:\n\n1. Eliminación hacia atrás con Drop1/AIC\nCon regresión eliminación hacia atrás, empezamos con todas las variables y eliminarlas uno a uno hasta que queda uno y después elige lo mejor modelo con AIC. Esto es bueno porque puede elegir una a una las variables que son más o menos efectivo. Es malo si tiene algunas variables si son obligatorias dejar.\n\nEmpieza con un modelo con todas sus variables explicativas. Elegir una familia adecuada y probar por correlación/normalidad/homogeneidad de varianza.\nUsar ‘drop1’ con prueba preferida (‘chisq’ es mi favorito) para identificar la variable con lo menor impacto\nHacer un nuevo modelo con este variable eliminado\nRehacerlo hasta que queda uno o que todos son significantes\n\n\n# parte con 'ABBaseBN' del los modelos que ya he hecho\ndrop1(ABBaseBN, test=\"Chisq\")\n\nSingle term deletions\n\nModel:\nAcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo\n             Df Deviance    AIC     LRT Pr(&gt;Chi)  \n&lt;none&gt;            75.355 443.15                   \nDensSustrato  1   76.135 441.93  0.7795  0.37729  \nCuentaAgua    1   78.456 444.25  3.1005  0.07827 .\nSustrato      6   91.139 446.94 15.7843  0.01496 *\nTopo          1   81.171 446.97  5.8160  0.01588 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# lo menos fuerte es DensSustrato (número más grande)\n\n\nABBaseBN2 &lt;- glm.nb(data=ac, AcaroBrachy ~ CuentaAgua + Sustrato + Topo)\n\nsimResABBaseBN2 &lt;-simulateResiduals(ABBaseBN2) #DHARMa: hace resiudos y graficos para evaluar normalidad y homogeneidad de varianza\n# si hay líneas super curvados, rojo o valor P&lt;0.05) en el QQ plot (izquierda) no vale\n\nplot(simResABBaseBN2)\n\n\n\n\n\n\n\n# todavia no cumple con los supuestos\n\nDe nuevo\n\ndrop1(ABBaseBN2, test=\"Chisq\")\n\nSingle term deletions\n\nModel:\nAcaroBrachy ~ CuentaAgua + Sustrato + Topo\n           Df Deviance    AIC     LRT Pr(&gt;Chi)  \n&lt;none&gt;          75.357 441.93                   \nCuentaAgua  1   77.882 442.45  2.5244  0.11209  \nSustrato    6   90.229 444.80 14.8716  0.02128 *\nTopo        1   80.967 445.54  5.6095  0.01786 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# cuenta agua\n\n\nABBaseBN3 &lt;- glm.nb(data=ac, AcaroBrachy ~ Sustrato + Topo)\n\nsimResABBaseBN3 &lt;-simulateResiduals(ABBaseBN3) \n\nplot(simResABBaseBN3)\n\n\n\n\n\n\n\n# excelente! Ahora se cumple con los supuestos\n\nDe nuevo\n\ndrop1(ABBaseBN3, test=\"Chisq\")\n\nSingle term deletions\n\nModel:\nAcaroBrachy ~ Sustrato + Topo\n         Df Deviance    AIC    LRT Pr(&gt;Chi)   \n&lt;none&gt;        75.588 442.41                   \nSustrato  6   97.390 452.21 21.803 0.001315 **\nTopo      1   85.592 450.42 10.004 0.001562 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# todo tiene significancia, entonces podemos parar\n\nAsí que ahora todo es significante, es la hora de probar todos los modelos con AIC.\n\nlibrary(MuMIn)\nlr_output.AIC &lt;- model.sel(ABBase, ABBaseBN, ABBasep, ABBaseBN2, ABBaseBN3) # incluir los modelos de interés\n\nlr_AIC.table&lt;-as.data.frame(lr_output.AIC)[7:12] # estas columnas pueden cambiar, entonces puede ver en el tab 'environment' también\n\nlr_AIC.table\n\n           class init.theta link df    logLik     AICc\nABBaseBN3 negbin       1.31  log  9 -213.2054 447.4108\nABBaseBN2 negbin       1.37  log 10 -211.9637 447.6561\nABBaseBN  negbin       1.39  log 11 -211.5763 449.7044\nABBase       glm                 11 -250.1195 526.7907\nABBasep      glm                 10 -352.4087 728.5461\n\n\nABBaseBN3, o sea el último, es lo mejor modelo.\n\n# probar supuestos \nsimResABBaseBN3 &lt;-simulateResiduals(ABBaseBN3) \n\nplot(simResABBaseBN3)\n\n\n\n\n\n\n\nvif(ABBaseBN3)\n\n            GVIF Df GVIF^(1/(2*Df))\nSustrato 1.19508  6        1.014962\nTopo     1.19508  1        1.093197\n\nplot(ABBaseBN3)\n\nWarning: not plotting observations with leverage one:\n  11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAsí que el modelo se cumple con todos los supuestos, ve los resultados.\n\n# resultados\nsummary(ABBaseBN3)\n\n\nCall:\nglm.nb(formula = AcaroBrachy ~ Sustrato + Topo, data = ac, init.theta = 1.314842229, \n    link = log)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        1.546e+00  2.430e-01   6.361    2e-10 ***\nSustratoSphagn2    5.695e-01  3.469e-01   1.642 0.100644    \nSustratoSphagn3    2.038e+00  9.205e-01   2.214 0.026833 *  \nSustratoSphagn4   -7.038e-01  7.198e-01  -0.978 0.328182    \nSustratoLitter    -9.743e-01  7.782e-01  -1.252 0.210588    \nSustratoBarepeat  -2.985e+01  6.000e+05   0.000 0.999960    \nSustratoInterface  3.404e-01  2.778e-01   1.225 0.220453    \nTopoHummock        8.630e-01  2.558e-01   3.374 0.000741 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(1.3148) family taken to be 1)\n\n    Null deviance: 103.660  on 69  degrees of freedom\nResidual deviance:  75.588  on 62  degrees of freedom\nAIC: 444.41\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  1.315 \n          Std. Err.:  0.261 \n\n 2 x log-likelihood:  -426.411 \n\n\nAsí que los dos variables que quedan son factores, en los resultados, se muestra todos los niveles y su significancia. Que puede decir desde los resultados?\nLa primera colúmna (Estimate) es la inclinación del modelo. O sea que comparado al intercept, el sustrato Sphagn2 tiene 0.5x la abundancia del intercept. Es imporante ver y tener en cuenta la inclinación porque puede tener un modelo que tiene muchísimas variables significantes, pero la diferencia es super poco (por ejemplo solo gana un más abeja). En el ‘estimate’ un valor positivo es más grande, y negativo es más chico.\n‘Std. error’ o sea, error estander, es el error. Siempre hay duda en modelos, pero un modelo super bien tiene un nivel bajo de duda, o sea, un error estander más chico.\nEl Z-value (o t-value) es importante porque puede evaluar la fuerza del estimación por variable. O sea, su Z/T es su estimate dividio por el error. Entonces, un valor más chico tiene un error más grande, y tiene más duda.\nEl Pr es su valor p. Usa eso para evaluar significancia. Había un superenfoque en significancia en ecologia, pero debería leer bien todo, porque es super posible que tiene un modelo significante pero debíl. Las estrellas significa cuales variables son significadamente distinto al resto (o sea, que tiene una abundancia significiativamente alto o bajo comparado al resto).\nVamos a hablar de más indicaciones del fuerza de su modelo más adelante.\n\n\n2. regresión ‘forward’\nUsa regresión forward para añadir de forma rapido las variables más impactantes.\nEmpece con un modelo vacio (o sea var.res ~ 1), sin variables explicativas y un modelo con todas las variables de interés.\nUsa el función ‘step’ para elegir la proxima variable que debería añadir hasta que nada son significados en step.\nPuede probar/elegir su modelo mejor con AIC y no olvide a probar los supuestos.\n\nModVac &lt;- glm(data=ac, AcaroBrachy ~ 1) # modelo con ninguna variable explicativa\nModTodo &lt;- glm(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo ) # modelo con todas las variables explicativas\n\n# nombre       step(partida, scope=list(lower=vacio, upper=todo))\nMod_forward &lt;- step(ModVac, scope=list(lower=ModVac, upper=ModTodo))\n\nStart:  AIC=525.13\nAcaroBrachy ~ 1\n\n               Df Deviance    AIC\n+ CuentaAgua    1   6339.0 520.07\n+ Topo          1   6569.2 522.57\n&lt;none&gt;              7011.8 525.13\n+ Sustrato      6   5972.4 525.90\n+ DensSustrato  1   6956.2 526.57\n\nStep:  AIC=520.07\nAcaroBrachy ~ CuentaAgua\n\n               Df Deviance    AIC\n&lt;none&gt;              6339.0 520.07\n+ Topo          1   6214.4 520.68\n+ DensSustrato  1   6335.6 522.03\n+ Sustrato      6   5595.7 523.34\n- CuentaAgua    1   7011.8 525.13\n\n\nAcá tiene dos respuestas a la pregunta, cuales variables son mejores por el modelo. Usa AIC para decidir, y puede ver que el modelo mejor con un variable es Cuenta Agua y no se da un modelo con 2 variables porque no sea mejor.\nPero, si ya no he probado sus supuestos, esto puede ser equivocado. Por ejemplo, los modelos acá están hechos con la familia gaussian, que es malo. Si hace de nuevo con binomio negativo, cambiaría los datos.\n\nModVac &lt;- glm.nb(data=ac, AcaroBrachy ~ 1)\nModTodo &lt;- glm.nb(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo )\n\nMod_forward &lt;- step(ModVac, scope=list(lower=ModVac, upper=ModTodo))\n\nStart:  AIC=452.91\nAcaroBrachy ~ 1\n\n               Df Deviance    AIC\n+ CuentaAgua    1   70.120 445.31\n+ Topo          1   75.104 450.29\n+ Sustrato      6   65.567 450.75\n&lt;none&gt;              79.723 452.91\n+ DensSustrato  1   78.808 453.99\n\nStep:  AIC=444.64\nAcaroBrachy ~ CuentaAgua\n\n               Df Deviance    AIC\n+ Topo          1   76.299 443.93\n&lt;none&gt;              79.011 444.64\n+ Sustrato      6   68.180 445.81\n+ DensSustrato  1   78.955 446.59\n- CuentaAgua    1   90.013 453.64\n\nStep:  AIC=443.88\nAcaroBrachy ~ CuentaAgua + Topo\n\n               Df Deviance    AIC\n+ Sustrato      6   65.652 442.76\n&lt;none&gt;              78.772 443.88\n- Topo          1   81.581 444.69\n+ DensSustrato  1   78.763 445.87\n- CuentaAgua    1   87.467 450.58\n\nStep:  AIC=441.93\nAcaroBrachy ~ CuentaAgua + Topo + Sustrato\n\n               Df Deviance    AIC\n&lt;none&gt;              75.357 441.93\n- CuentaAgua    1   77.882 442.45\n+ DensSustrato  1   74.587 443.16\n- Sustrato      6   90.229 444.80\n- Topo          1   80.967 445.54\n\n\nAsí que ahora ocupa la familia adecuada, había más opciones. Había modelos hasta tres variables explicativas y lo mejor AIC es lo con tres.\nProbamos esta variable:\n\nRF3 &lt;- glm.nb(data=ac, AcaroBrachy ~ CuentaAgua + Topo + Sustrato)\n\nsimResRF3 &lt;-simulateResiduals(RF3) \n\nplot(simResRF3)\n\n\n\n\n\n\n\nvif(RF3)\n\n               GVIF Df GVIF^(1/(2*Df))\nCuentaAgua 1.420439  1        1.191822\nTopo       1.524958  1        1.234892\nSustrato   1.425558  6        1.029988\n\n# podemos ver que no es exactamente bien\n\nsummary(RF3)\n\n\nCall:\nglm.nb(formula = AcaroBrachy ~ CuentaAgua + Topo + Sustrato, \n    data = ac, init.theta = 1.368777835, link = log)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        2.327e+00  5.328e-01   4.368 1.26e-05 ***\nCuentaAgua        -1.622e-03  1.002e-03  -1.618   0.1056    \nTopoHummock        6.832e-01  2.844e-01   2.402   0.0163 *  \nSustratoSphagn2    4.935e-01  3.429e-01   1.439   0.1501    \nSustratoSphagn3    1.474e+00  9.656e-01   1.527   0.1269    \nSustratoSphagn4   -7.238e-01  7.070e-01  -1.024   0.3060    \nSustratoLitter    -1.108e+00  7.713e-01  -1.436   0.1509    \nSustratoBarepeat  -2.855e+01  3.628e+05   0.000   0.9999    \nSustratoInterface  2.144e-01  2.792e-01   0.768   0.4426    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(1.3688) family taken to be 1)\n\n    Null deviance: 106.812  on 69  degrees of freedom\nResidual deviance:  75.357  on 61  degrees of freedom\nAIC: 443.93\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  1.369 \n          Std. Err.:  0.275 \n\n 2 x log-likelihood:  -423.927 \n\n# pero se sale similar que el topo hummock es super significante y con el error más chico\n\nSiempre, siempre probar sus modelos después de elegirlas, porque sus resultados no son validos si no cumpla con los supuestos.\n\n\n3. regresión ‘backward’\nRegresión hacia atrás, o sea, backward, es lo mismo idea que ‘forward’ pero empezamos con un modelo lleno y eliminar variables en vez de añadir. La distinción entre eso y la versión ‘stepwise’ es que acá hice todo el mismo tiempo. Puede ser bueno, pero también hay más posibilidad de error porque no prueba los supuestos en cada etapa.\n\nModVac &lt;- glm.nb(data=ac, AcaroBrachy ~ 1)\nModTodo &lt;- glm.nb(data=ac, AcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo )\n# acá empieza con el modelo lleno, porque va a eliminar no añadir\nMod_forward &lt;- step(ModTodo, scope=list(lower=ModVac, upper=ModTodo), direction='backward')\n\nStart:  AIC=443.15\nAcaroBrachy ~ DensSustrato + CuentaAgua + Sustrato + Topo\n\n               Df Deviance    AIC\n- DensSustrato  1   76.135 441.93\n&lt;none&gt;              75.355 443.15\n- CuentaAgua    1   78.456 444.25\n- Sustrato      6   91.139 446.94\n- Topo          1   81.171 446.97\n\nStep:  AIC=441.93\nAcaroBrachy ~ CuentaAgua + Sustrato + Topo\n\n             Df Deviance    AIC\n&lt;none&gt;            75.357 441.93\n- CuentaAgua  1   77.882 442.45\n- Sustrato    6   90.229 444.80\n- Topo        1   80.967 445.54\n\n\n\nRB3 &lt;- glm.nb(data=ac, AcaroBrachy ~ CuentaAgua + Sustrato + Topo)\n\nRB3 &lt;- glm.nb(data=ac, AcaroBrachy ~ CuentaAgua + Topo + Sustrato)\n\nsimResRB3 &lt;-simulateResiduals(RB3) \n\nplot(simResRB3)\n\n\n\n\n\n\n\nvif(RB3)\n\n               GVIF Df GVIF^(1/(2*Df))\nCuentaAgua 1.420439  1        1.191822\nTopo       1.524958  1        1.234892\nSustrato   1.425558  6        1.029988\n\n# podemos ver que no es exactamente bien\n\nsummary(RB3)\n\n\nCall:\nglm.nb(formula = AcaroBrachy ~ CuentaAgua + Topo + Sustrato, \n    data = ac, init.theta = 1.368777835, link = log)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        2.327e+00  5.328e-01   4.368 1.26e-05 ***\nCuentaAgua        -1.622e-03  1.002e-03  -1.618   0.1056    \nTopoHummock        6.832e-01  2.844e-01   2.402   0.0163 *  \nSustratoSphagn2    4.935e-01  3.429e-01   1.439   0.1501    \nSustratoSphagn3    1.474e+00  9.656e-01   1.527   0.1269    \nSustratoSphagn4   -7.238e-01  7.070e-01  -1.024   0.3060    \nSustratoLitter    -1.108e+00  7.713e-01  -1.436   0.1509    \nSustratoBarepeat  -2.855e+01  3.628e+05   0.000   0.9999    \nSustratoInterface  2.144e-01  2.792e-01   0.768   0.4426    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(1.3688) family taken to be 1)\n\n    Null deviance: 106.812  on 69  degrees of freedom\nResidual deviance:  75.357  on 61  degrees of freedom\nAIC: 443.93\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  1.369 \n          Std. Err.:  0.275 \n\n 2 x log-likelihood:  -423.927 \n\nplot(RB3)\n\nWarning: not plotting observations with leverage one:\n  11\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAcá se sale lo mismo como regresión ‘forward’ pero distinto a ‘stepwise backward’. Depende en su cantidad de variables, puede salir de cualquier manera.\n\n\n\nrecursos adicionales\nVideo de interpretar modelos- English\nTipos de elección- Español",
    "crumbs": [
      "Clases",
      "Modelos lineales"
    ]
  },
  {
    "objectID": "Horario.html",
    "href": "Horario.html",
    "title": "Horario",
    "section": "",
    "text": "Fecha\nTema\nTareas sugeridas\nEntregar\n\n\n\n\n13/8/24\nIntroducción a ciencia de datos\nOrganizar y guardar sus datos como csv, crear su proyecto en R\n\n\n\n20/8/24\nIntroducción a R/R Studio\nCrear su R Markdown y cargar datos/paquetes\n\n\n\n27/8/24\nIntroducción a tidyverse\nPracticar ‘pivot’ con sus datos\n\n\n\n3/9/24\nGGplot pt 1\nHacer gráficos como queráis\n\n\n\n10/9/24\nGGplot pt 2\nFinalizar su proyecto\n\n\n\n17/9/24\nNo hay clase\n\nEntregar proyecto 1\n\n\n24/9/24\nNormalización\nNormalizar sus datos\n\n\n\n1/10/24\ncorrelación\nAnalizar correlación con gráficos y números\n\n\n\n8/10/24\nIntroducción a modelos normales\nPrueba los asumpciones de un modelo normal, elegir familia\n\n\n\n15/10/24\nModelos normales p2\nHacer y elegir un modelo bueno\n\n\n\n22/10/24\nModelos non-paramétricos\nFinalizar su proyecto\n\n\n\n29/10/24\nNo hay clase\n\nEntregar proyecto 2\n\n\n5/11/24\nFuerza/análisis del modelo\nElegir y hacer un análisis de fuerza y ajuste del modelo\n\n\n\n12/11/24\nGráficos para comunicar\nElegir y diseñar gráficos comunicativos\n\n\n\n19/11/24\nTiempo para trabajar en clase\nFinalizar proyecto\n\n\n\n26/11/24\nEntregar proyecto final\n\nEntregar proyecto 3",
    "crumbs": [
      "Horario"
    ]
  },
  {
    "objectID": "Proyecto1.html",
    "href": "Proyecto1.html",
    "title": "Proyecto1",
    "section": "",
    "text": "Usando sus propios datos (si no tenga, avísame), hacer un R Markdown con una exploración completa de sus datos según lo que hemos hecho en clase.\nDebería entregar un R Markdown en formato PDF\nIncluye:\n\nCargar y llamar sus datos (del csv o paquete data/datos)\nIncluir encabezados descriptivos (bien organizadas) y texto normal (puede presentar su proyecto, sus datos o su mismo)\nDatos en forma ‘tidy’, mínimo un pivot\nUn gráfico de ggplot (elegir lo mejor forma y defender con una oración)\n\nLos gráficos deben tener títulos de los dos axis, y un título descriptivo\ndebe tener colores únicos para distinguir grupos en sus gráficos\nmínimo un facet\n\nSumir todo con un párrafo (puede ser corto) que explica los resultados de su exploración\n\n\n\n\n\n\n\n\n\n\n\n\n\n20%\n40%\n60%\n80%\n100%\n\n\n\n\nMarkdown\nSin organización, sin texto normal, sin pdf\nMal exportado, sin parrafos o títulos\nMinimo de esfuerzo, sin un parrafo, foto, o título\nBien hecho, pero sin un elemento\nCon parrafos, fotos, títulos, exportada como pdf\n\n\nPivot\nSin pivot\n\nPivot exitoso, pero mal organizado (nombres mal, o con NA)\n\nPivot llamado bien, y usado por su ggplot\n\n\ngráfico ggplot\nSin gráfico\nUn gráfico inadecuado por los datos\nUn gráfico adecuado sin dos elementos (sin títulos, colores, facet, etc)\nUn gráfico sin un elemento o otro\nUn gráfico bien elegido, con títulos descriptivas, un facet, y colores",
    "crumbs": [
      "Proyectos",
      "Proyecto1"
    ]
  }
]